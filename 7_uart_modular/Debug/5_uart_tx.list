
5_uart_tx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001360  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08001500  08001500  00011500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015b4  080015b4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015b4  080015b4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015b4  080015b4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015b4  080015b4  000115b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015b8  080015b8  000115b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001620  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001620  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d57  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000040e  00000000  00000000  00020deb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00021200  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00021338  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000101f3  00000000  00000000  00021438  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000015a8  00000000  00000000  0003162b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00054e2f  00000000  00000000  00032bd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00087a02  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be8  00000000  00000000  00087a54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080014e8 	.word	0x080014e8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080014e8 	.word	0x080014e8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__io_putchar>:
void uar2_tx_init (void);
void uart2_write(int ch);


int __io_putchar(int ch)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000288:	6878      	ldr	r0, [r7, #4]
 800028a:	f000 f863 	bl	8000354 <uart2_write>
	return ch;
 800028e:	687b      	ldr	r3, [r7, #4]
}
 8000290:	4618      	mov	r0, r3
 8000292:	3708      	adds	r7, #8
 8000294:	46bd      	mov	sp, r7
 8000296:	bd80      	pop	{r7, pc}

08000298 <main>:



int main (void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	uar2_tx_init();
 800029c:	f000 f80e 	bl	80002bc <uar2_tx_init>

	/* Enable clock */
	RCC->AHB1ENR |= GPIOAEN;
 80002a0:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <main+0x1c>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	4a03      	ldr	r2, [pc, #12]	; (80002b4 <main+0x1c>)
 80002a6:	f043 0301 	orr.w	r3, r3, #1
 80002aa:	6313      	str	r3, [r2, #48]	; 0x30



	while(1)
	{
		printf("Hello from STM32F4...... \n\r");
 80002ac:	4802      	ldr	r0, [pc, #8]	; (80002b8 <main+0x20>)
 80002ae:	f000 f98d 	bl	80005cc <iprintf>
 80002b2:	e7fb      	b.n	80002ac <main+0x14>
 80002b4:	40023800 	.word	0x40023800
 80002b8:	08001500 	.word	0x08001500

080002bc <uar2_tx_init>:
	}
 }

void uar2_tx_init (void)

{
 80002bc:	b580      	push	{r7, lr}
 80002be:	af00      	add	r7, sp, #0
	/**************** Configure UART GPIO pin ****************/

	/* Enable clock access to GPIOA */
	RCC->AHB1ENR |= GPIOAEN;
 80002c0:	4b20      	ldr	r3, [pc, #128]	; (8000344 <uar2_tx_init+0x88>)
 80002c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c4:	4a1f      	ldr	r2, [pc, #124]	; (8000344 <uar2_tx_init+0x88>)
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	6313      	str	r3, [r2, #48]	; 0x30
	/* Set PA2 mode to alternate function mode */
	GPIOA->MODER  &=~  (1U<<4);
 80002cc:	4b1e      	ldr	r3, [pc, #120]	; (8000348 <uar2_tx_init+0x8c>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	4a1d      	ldr	r2, [pc, #116]	; (8000348 <uar2_tx_init+0x8c>)
 80002d2:	f023 0310 	bic.w	r3, r3, #16
 80002d6:	6013      	str	r3, [r2, #0]
	GPIOA->MODER  |=   (1U<<5);
 80002d8:	4b1b      	ldr	r3, [pc, #108]	; (8000348 <uar2_tx_init+0x8c>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	4a1a      	ldr	r2, [pc, #104]	; (8000348 <uar2_tx_init+0x8c>)
 80002de:	f043 0320 	orr.w	r3, r3, #32
 80002e2:	6013      	str	r3, [r2, #0]
	/* Set PA2 function type to UART_TX (AF07) */

	GPIOA->AFR [0] |=  (1U<<8);
 80002e4:	4b18      	ldr	r3, [pc, #96]	; (8000348 <uar2_tx_init+0x8c>)
 80002e6:	6a1b      	ldr	r3, [r3, #32]
 80002e8:	4a17      	ldr	r2, [pc, #92]	; (8000348 <uar2_tx_init+0x8c>)
 80002ea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002ee:	6213      	str	r3, [r2, #32]
	GPIOA->AFR [0] |=  (1U<<9);
 80002f0:	4b15      	ldr	r3, [pc, #84]	; (8000348 <uar2_tx_init+0x8c>)
 80002f2:	6a1b      	ldr	r3, [r3, #32]
 80002f4:	4a14      	ldr	r2, [pc, #80]	; (8000348 <uar2_tx_init+0x8c>)
 80002f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002fa:	6213      	str	r3, [r2, #32]
	GPIOA->AFR [0] |=  (1U<<10);
 80002fc:	4b12      	ldr	r3, [pc, #72]	; (8000348 <uar2_tx_init+0x8c>)
 80002fe:	6a1b      	ldr	r3, [r3, #32]
 8000300:	4a11      	ldr	r2, [pc, #68]	; (8000348 <uar2_tx_init+0x8c>)
 8000302:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000306:	6213      	str	r3, [r2, #32]
	GPIOA->AFR [0] &=~ (1U<<11);
 8000308:	4b0f      	ldr	r3, [pc, #60]	; (8000348 <uar2_tx_init+0x8c>)
 800030a:	6a1b      	ldr	r3, [r3, #32]
 800030c:	4a0e      	ldr	r2, [pc, #56]	; (8000348 <uar2_tx_init+0x8c>)
 800030e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000312:	6213      	str	r3, [r2, #32]

	/**************** Configure UART module ****************/

	/* Enable clock access to UART2 */
	RCC->APB1ENR |= UART2EN;
 8000314:	4b0b      	ldr	r3, [pc, #44]	; (8000344 <uar2_tx_init+0x88>)
 8000316:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000318:	4a0a      	ldr	r2, [pc, #40]	; (8000344 <uar2_tx_init+0x88>)
 800031a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800031e:	6413      	str	r3, [r2, #64]	; 0x40

	/* Configure BaudRate */

	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8000320:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000324:	4909      	ldr	r1, [pc, #36]	; (800034c <uar2_tx_init+0x90>)
 8000326:	480a      	ldr	r0, [pc, #40]	; (8000350 <uar2_tx_init+0x94>)
 8000328:	f000 f82c 	bl	8000384 <uart_set_baudrate>

	/* Configure the transfer direction */
	USART2->CR1 = CR1_TE;
 800032c:	4b08      	ldr	r3, [pc, #32]	; (8000350 <uar2_tx_init+0x94>)
 800032e:	2208      	movs	r2, #8
 8000330:	60da      	str	r2, [r3, #12]


	/* Enable UART module */
	USART2->CR1 |= CR1_UE;
 8000332:	4b07      	ldr	r3, [pc, #28]	; (8000350 <uar2_tx_init+0x94>)
 8000334:	68db      	ldr	r3, [r3, #12]
 8000336:	4a06      	ldr	r2, [pc, #24]	; (8000350 <uar2_tx_init+0x94>)
 8000338:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800033c:	60d3      	str	r3, [r2, #12]

}
 800033e:	bf00      	nop
 8000340:	bd80      	pop	{r7, pc}
 8000342:	bf00      	nop
 8000344:	40023800 	.word	0x40023800
 8000348:	40020000 	.word	0x40020000
 800034c:	00f42400 	.word	0x00f42400
 8000350:	40004400 	.word	0x40004400

08000354 <uart2_write>:

void uart2_write(int ch)
{
 8000354:	b480      	push	{r7}
 8000356:	b083      	sub	sp, #12
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
	/* Make sure the transmit data register is empty */
	 while (!(USART2->SR & SR_TXE)){}
 800035c:	bf00      	nop
 800035e:	4b08      	ldr	r3, [pc, #32]	; (8000380 <uart2_write+0x2c>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000366:	2b00      	cmp	r3, #0
 8000368:	d0f9      	beq.n	800035e <uart2_write+0xa>

	/* Write to transmit data register */

	USART2->DR = (ch & 0xFF);
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a04      	ldr	r2, [pc, #16]	; (8000380 <uart2_write+0x2c>)
 800036e:	b2db      	uxtb	r3, r3
 8000370:	6053      	str	r3, [r2, #4]
}
 8000372:	bf00      	nop
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40004400 	.word	0x40004400

08000384 <uart_set_baudrate>:


static void uart_set_baudrate (USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b084      	sub	sp, #16
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd (PeriphClk, BaudRate);
 8000390:	6879      	ldr	r1, [r7, #4]
 8000392:	68b8      	ldr	r0, [r7, #8]
 8000394:	f000 f808 	bl	80003a8 <compute_uart_bd>
 8000398:	4603      	mov	r3, r0
 800039a:	461a      	mov	r2, r3
 800039c:	68fb      	ldr	r3, [r7, #12]
 800039e:	609a      	str	r2, [r3, #8]
}
 80003a0:	bf00      	nop
 80003a2:	3710      	adds	r7, #16
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bd80      	pop	{r7, pc}

080003a8 <compute_uart_bd>:



static uint16_t compute_uart_bd (uint32_t PeriphClk, uint32_t BaudRate)
{
 80003a8:	b480      	push	{r7}
 80003aa:	b083      	sub	sp, #12
 80003ac:	af00      	add	r7, sp, #0
 80003ae:	6078      	str	r0, [r7, #4]
 80003b0:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 80003b2:	683b      	ldr	r3, [r7, #0]
 80003b4:	085a      	lsrs	r2, r3, #1
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	441a      	add	r2, r3
 80003ba:	683b      	ldr	r3, [r7, #0]
 80003bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80003c0:	b29b      	uxth	r3, r3
}
 80003c2:	4618      	mov	r0, r3
 80003c4:	370c      	adds	r7, #12
 80003c6:	46bd      	mov	sp, r7
 80003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003cc:	4770      	bx	lr

080003ce <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003ce:	b580      	push	{r7, lr}
 80003d0:	b086      	sub	sp, #24
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	60f8      	str	r0, [r7, #12]
 80003d6:	60b9      	str	r1, [r7, #8]
 80003d8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003da:	2300      	movs	r3, #0
 80003dc:	617b      	str	r3, [r7, #20]
 80003de:	e00a      	b.n	80003f6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003e0:	f3af 8000 	nop.w
 80003e4:	4601      	mov	r1, r0
 80003e6:	68bb      	ldr	r3, [r7, #8]
 80003e8:	1c5a      	adds	r2, r3, #1
 80003ea:	60ba      	str	r2, [r7, #8]
 80003ec:	b2ca      	uxtb	r2, r1
 80003ee:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f0:	697b      	ldr	r3, [r7, #20]
 80003f2:	3301      	adds	r3, #1
 80003f4:	617b      	str	r3, [r7, #20]
 80003f6:	697a      	ldr	r2, [r7, #20]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	429a      	cmp	r2, r3
 80003fc:	dbf0      	blt.n	80003e0 <_read+0x12>
  }

  return len;
 80003fe:	687b      	ldr	r3, [r7, #4]
}
 8000400:	4618      	mov	r0, r3
 8000402:	3718      	adds	r7, #24
 8000404:	46bd      	mov	sp, r7
 8000406:	bd80      	pop	{r7, pc}

08000408 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b086      	sub	sp, #24
 800040c:	af00      	add	r7, sp, #0
 800040e:	60f8      	str	r0, [r7, #12]
 8000410:	60b9      	str	r1, [r7, #8]
 8000412:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000414:	2300      	movs	r3, #0
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	e009      	b.n	800042e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800041a:	68bb      	ldr	r3, [r7, #8]
 800041c:	1c5a      	adds	r2, r3, #1
 800041e:	60ba      	str	r2, [r7, #8]
 8000420:	781b      	ldrb	r3, [r3, #0]
 8000422:	4618      	mov	r0, r3
 8000424:	f7ff ff2c 	bl	8000280 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	3301      	adds	r3, #1
 800042c:	617b      	str	r3, [r7, #20]
 800042e:	697a      	ldr	r2, [r7, #20]
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	429a      	cmp	r2, r3
 8000434:	dbf1      	blt.n	800041a <_write+0x12>
  }
  return len;
 8000436:	687b      	ldr	r3, [r7, #4]
}
 8000438:	4618      	mov	r0, r3
 800043a:	3718      	adds	r7, #24
 800043c:	46bd      	mov	sp, r7
 800043e:	bd80      	pop	{r7, pc}

08000440 <_close>:

int _close(int file)
{
 8000440:	b480      	push	{r7}
 8000442:	b083      	sub	sp, #12
 8000444:	af00      	add	r7, sp, #0
 8000446:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000448:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800044c:	4618      	mov	r0, r3
 800044e:	370c      	adds	r7, #12
 8000450:	46bd      	mov	sp, r7
 8000452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000456:	4770      	bx	lr

08000458 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000458:	b480      	push	{r7}
 800045a:	b083      	sub	sp, #12
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
 8000460:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000462:	683b      	ldr	r3, [r7, #0]
 8000464:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000468:	605a      	str	r2, [r3, #4]
  return 0;
 800046a:	2300      	movs	r3, #0
}
 800046c:	4618      	mov	r0, r3
 800046e:	370c      	adds	r7, #12
 8000470:	46bd      	mov	sp, r7
 8000472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000476:	4770      	bx	lr

08000478 <_isatty>:

int _isatty(int file)
{
 8000478:	b480      	push	{r7}
 800047a:	b083      	sub	sp, #12
 800047c:	af00      	add	r7, sp, #0
 800047e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000480:	2301      	movs	r3, #1
}
 8000482:	4618      	mov	r0, r3
 8000484:	370c      	adds	r7, #12
 8000486:	46bd      	mov	sp, r7
 8000488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048c:	4770      	bx	lr

0800048e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800048e:	b480      	push	{r7}
 8000490:	b085      	sub	sp, #20
 8000492:	af00      	add	r7, sp, #0
 8000494:	60f8      	str	r0, [r7, #12]
 8000496:	60b9      	str	r1, [r7, #8]
 8000498:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800049a:	2300      	movs	r3, #0
}
 800049c:	4618      	mov	r0, r3
 800049e:	3714      	adds	r7, #20
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr

080004a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004a8:	b580      	push	{r7, lr}
 80004aa:	b086      	sub	sp, #24
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004b0:	4a14      	ldr	r2, [pc, #80]	; (8000504 <_sbrk+0x5c>)
 80004b2:	4b15      	ldr	r3, [pc, #84]	; (8000508 <_sbrk+0x60>)
 80004b4:	1ad3      	subs	r3, r2, r3
 80004b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004b8:	697b      	ldr	r3, [r7, #20]
 80004ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004bc:	4b13      	ldr	r3, [pc, #76]	; (800050c <_sbrk+0x64>)
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	2b00      	cmp	r3, #0
 80004c2:	d102      	bne.n	80004ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c4:	4b11      	ldr	r3, [pc, #68]	; (800050c <_sbrk+0x64>)
 80004c6:	4a12      	ldr	r2, [pc, #72]	; (8000510 <_sbrk+0x68>)
 80004c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ca:	4b10      	ldr	r3, [pc, #64]	; (800050c <_sbrk+0x64>)
 80004cc:	681a      	ldr	r2, [r3, #0]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	4413      	add	r3, r2
 80004d2:	693a      	ldr	r2, [r7, #16]
 80004d4:	429a      	cmp	r2, r3
 80004d6:	d207      	bcs.n	80004e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004d8:	f000 f846 	bl	8000568 <__errno>
 80004dc:	4603      	mov	r3, r0
 80004de:	220c      	movs	r2, #12
 80004e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80004e6:	e009      	b.n	80004fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004e8:	4b08      	ldr	r3, [pc, #32]	; (800050c <_sbrk+0x64>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ee:	4b07      	ldr	r3, [pc, #28]	; (800050c <_sbrk+0x64>)
 80004f0:	681a      	ldr	r2, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	4413      	add	r3, r2
 80004f6:	4a05      	ldr	r2, [pc, #20]	; (800050c <_sbrk+0x64>)
 80004f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004fa:	68fb      	ldr	r3, [r7, #12]
}
 80004fc:	4618      	mov	r0, r3
 80004fe:	3718      	adds	r7, #24
 8000500:	46bd      	mov	sp, r7
 8000502:	bd80      	pop	{r7, pc}
 8000504:	20020000 	.word	0x20020000
 8000508:	00000400 	.word	0x00000400
 800050c:	20000080 	.word	0x20000080
 8000510:	20000098 	.word	0x20000098

08000514 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000514:	480d      	ldr	r0, [pc, #52]	; (800054c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000516:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000518:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800051c:	480c      	ldr	r0, [pc, #48]	; (8000550 <LoopForever+0x6>)
  ldr r1, =_edata
 800051e:	490d      	ldr	r1, [pc, #52]	; (8000554 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000520:	4a0d      	ldr	r2, [pc, #52]	; (8000558 <LoopForever+0xe>)
  movs r3, #0
 8000522:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000524:	e002      	b.n	800052c <LoopCopyDataInit>

08000526 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000526:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000528:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052a:	3304      	adds	r3, #4

0800052c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800052c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800052e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000530:	d3f9      	bcc.n	8000526 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000532:	4a0a      	ldr	r2, [pc, #40]	; (800055c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000534:	4c0a      	ldr	r4, [pc, #40]	; (8000560 <LoopForever+0x16>)
  movs r3, #0
 8000536:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000538:	e001      	b.n	800053e <LoopFillZerobss>

0800053a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800053c:	3204      	adds	r2, #4

0800053e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800053e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000540:	d3fb      	bcc.n	800053a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000542:	f000 f817 	bl	8000574 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000546:	f7ff fea7 	bl	8000298 <main>

0800054a <LoopForever>:

LoopForever:
  b LoopForever
 800054a:	e7fe      	b.n	800054a <LoopForever>
  ldr   r0, =_estack
 800054c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000550:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000554:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000558:	080015bc 	.word	0x080015bc
  ldr r2, =_sbss
 800055c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000560:	20000094 	.word	0x20000094

08000564 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000564:	e7fe      	b.n	8000564 <ADC_IRQHandler>
	...

08000568 <__errno>:
 8000568:	4b01      	ldr	r3, [pc, #4]	; (8000570 <__errno+0x8>)
 800056a:	6818      	ldr	r0, [r3, #0]
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop
 8000570:	20000000 	.word	0x20000000

08000574 <__libc_init_array>:
 8000574:	b570      	push	{r4, r5, r6, lr}
 8000576:	4d0d      	ldr	r5, [pc, #52]	; (80005ac <__libc_init_array+0x38>)
 8000578:	4c0d      	ldr	r4, [pc, #52]	; (80005b0 <__libc_init_array+0x3c>)
 800057a:	1b64      	subs	r4, r4, r5
 800057c:	10a4      	asrs	r4, r4, #2
 800057e:	2600      	movs	r6, #0
 8000580:	42a6      	cmp	r6, r4
 8000582:	d109      	bne.n	8000598 <__libc_init_array+0x24>
 8000584:	4d0b      	ldr	r5, [pc, #44]	; (80005b4 <__libc_init_array+0x40>)
 8000586:	4c0c      	ldr	r4, [pc, #48]	; (80005b8 <__libc_init_array+0x44>)
 8000588:	f000 ffae 	bl	80014e8 <_init>
 800058c:	1b64      	subs	r4, r4, r5
 800058e:	10a4      	asrs	r4, r4, #2
 8000590:	2600      	movs	r6, #0
 8000592:	42a6      	cmp	r6, r4
 8000594:	d105      	bne.n	80005a2 <__libc_init_array+0x2e>
 8000596:	bd70      	pop	{r4, r5, r6, pc}
 8000598:	f855 3b04 	ldr.w	r3, [r5], #4
 800059c:	4798      	blx	r3
 800059e:	3601      	adds	r6, #1
 80005a0:	e7ee      	b.n	8000580 <__libc_init_array+0xc>
 80005a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005a6:	4798      	blx	r3
 80005a8:	3601      	adds	r6, #1
 80005aa:	e7f2      	b.n	8000592 <__libc_init_array+0x1e>
 80005ac:	080015b4 	.word	0x080015b4
 80005b0:	080015b4 	.word	0x080015b4
 80005b4:	080015b4 	.word	0x080015b4
 80005b8:	080015b8 	.word	0x080015b8

080005bc <memset>:
 80005bc:	4402      	add	r2, r0
 80005be:	4603      	mov	r3, r0
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d100      	bne.n	80005c6 <memset+0xa>
 80005c4:	4770      	bx	lr
 80005c6:	f803 1b01 	strb.w	r1, [r3], #1
 80005ca:	e7f9      	b.n	80005c0 <memset+0x4>

080005cc <iprintf>:
 80005cc:	b40f      	push	{r0, r1, r2, r3}
 80005ce:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <iprintf+0x2c>)
 80005d0:	b513      	push	{r0, r1, r4, lr}
 80005d2:	681c      	ldr	r4, [r3, #0]
 80005d4:	b124      	cbz	r4, 80005e0 <iprintf+0x14>
 80005d6:	69a3      	ldr	r3, [r4, #24]
 80005d8:	b913      	cbnz	r3, 80005e0 <iprintf+0x14>
 80005da:	4620      	mov	r0, r4
 80005dc:	f000 f866 	bl	80006ac <__sinit>
 80005e0:	ab05      	add	r3, sp, #20
 80005e2:	9a04      	ldr	r2, [sp, #16]
 80005e4:	68a1      	ldr	r1, [r4, #8]
 80005e6:	9301      	str	r3, [sp, #4]
 80005e8:	4620      	mov	r0, r4
 80005ea:	f000 f9bd 	bl	8000968 <_vfiprintf_r>
 80005ee:	b002      	add	sp, #8
 80005f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f4:	b004      	add	sp, #16
 80005f6:	4770      	bx	lr
 80005f8:	20000000 	.word	0x20000000

080005fc <std>:
 80005fc:	2300      	movs	r3, #0
 80005fe:	b510      	push	{r4, lr}
 8000600:	4604      	mov	r4, r0
 8000602:	e9c0 3300 	strd	r3, r3, [r0]
 8000606:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800060a:	6083      	str	r3, [r0, #8]
 800060c:	8181      	strh	r1, [r0, #12]
 800060e:	6643      	str	r3, [r0, #100]	; 0x64
 8000610:	81c2      	strh	r2, [r0, #14]
 8000612:	6183      	str	r3, [r0, #24]
 8000614:	4619      	mov	r1, r3
 8000616:	2208      	movs	r2, #8
 8000618:	305c      	adds	r0, #92	; 0x5c
 800061a:	f7ff ffcf 	bl	80005bc <memset>
 800061e:	4b05      	ldr	r3, [pc, #20]	; (8000634 <std+0x38>)
 8000620:	6263      	str	r3, [r4, #36]	; 0x24
 8000622:	4b05      	ldr	r3, [pc, #20]	; (8000638 <std+0x3c>)
 8000624:	62a3      	str	r3, [r4, #40]	; 0x28
 8000626:	4b05      	ldr	r3, [pc, #20]	; (800063c <std+0x40>)
 8000628:	62e3      	str	r3, [r4, #44]	; 0x2c
 800062a:	4b05      	ldr	r3, [pc, #20]	; (8000640 <std+0x44>)
 800062c:	6224      	str	r4, [r4, #32]
 800062e:	6323      	str	r3, [r4, #48]	; 0x30
 8000630:	bd10      	pop	{r4, pc}
 8000632:	bf00      	nop
 8000634:	08000f11 	.word	0x08000f11
 8000638:	08000f33 	.word	0x08000f33
 800063c:	08000f6b 	.word	0x08000f6b
 8000640:	08000f8f 	.word	0x08000f8f

08000644 <_cleanup_r>:
 8000644:	4901      	ldr	r1, [pc, #4]	; (800064c <_cleanup_r+0x8>)
 8000646:	f000 b8af 	b.w	80007a8 <_fwalk_reent>
 800064a:	bf00      	nop
 800064c:	08001269 	.word	0x08001269

08000650 <__sfmoreglue>:
 8000650:	b570      	push	{r4, r5, r6, lr}
 8000652:	2268      	movs	r2, #104	; 0x68
 8000654:	1e4d      	subs	r5, r1, #1
 8000656:	4355      	muls	r5, r2
 8000658:	460e      	mov	r6, r1
 800065a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800065e:	f000 f8e5 	bl	800082c <_malloc_r>
 8000662:	4604      	mov	r4, r0
 8000664:	b140      	cbz	r0, 8000678 <__sfmoreglue+0x28>
 8000666:	2100      	movs	r1, #0
 8000668:	e9c0 1600 	strd	r1, r6, [r0]
 800066c:	300c      	adds	r0, #12
 800066e:	60a0      	str	r0, [r4, #8]
 8000670:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000674:	f7ff ffa2 	bl	80005bc <memset>
 8000678:	4620      	mov	r0, r4
 800067a:	bd70      	pop	{r4, r5, r6, pc}

0800067c <__sfp_lock_acquire>:
 800067c:	4801      	ldr	r0, [pc, #4]	; (8000684 <__sfp_lock_acquire+0x8>)
 800067e:	f000 b8b3 	b.w	80007e8 <__retarget_lock_acquire_recursive>
 8000682:	bf00      	nop
 8000684:	20000085 	.word	0x20000085

08000688 <__sfp_lock_release>:
 8000688:	4801      	ldr	r0, [pc, #4]	; (8000690 <__sfp_lock_release+0x8>)
 800068a:	f000 b8ae 	b.w	80007ea <__retarget_lock_release_recursive>
 800068e:	bf00      	nop
 8000690:	20000085 	.word	0x20000085

08000694 <__sinit_lock_acquire>:
 8000694:	4801      	ldr	r0, [pc, #4]	; (800069c <__sinit_lock_acquire+0x8>)
 8000696:	f000 b8a7 	b.w	80007e8 <__retarget_lock_acquire_recursive>
 800069a:	bf00      	nop
 800069c:	20000086 	.word	0x20000086

080006a0 <__sinit_lock_release>:
 80006a0:	4801      	ldr	r0, [pc, #4]	; (80006a8 <__sinit_lock_release+0x8>)
 80006a2:	f000 b8a2 	b.w	80007ea <__retarget_lock_release_recursive>
 80006a6:	bf00      	nop
 80006a8:	20000086 	.word	0x20000086

080006ac <__sinit>:
 80006ac:	b510      	push	{r4, lr}
 80006ae:	4604      	mov	r4, r0
 80006b0:	f7ff fff0 	bl	8000694 <__sinit_lock_acquire>
 80006b4:	69a3      	ldr	r3, [r4, #24]
 80006b6:	b11b      	cbz	r3, 80006c0 <__sinit+0x14>
 80006b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006bc:	f7ff bff0 	b.w	80006a0 <__sinit_lock_release>
 80006c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80006c4:	6523      	str	r3, [r4, #80]	; 0x50
 80006c6:	4b13      	ldr	r3, [pc, #76]	; (8000714 <__sinit+0x68>)
 80006c8:	4a13      	ldr	r2, [pc, #76]	; (8000718 <__sinit+0x6c>)
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80006ce:	42a3      	cmp	r3, r4
 80006d0:	bf04      	itt	eq
 80006d2:	2301      	moveq	r3, #1
 80006d4:	61a3      	streq	r3, [r4, #24]
 80006d6:	4620      	mov	r0, r4
 80006d8:	f000 f820 	bl	800071c <__sfp>
 80006dc:	6060      	str	r0, [r4, #4]
 80006de:	4620      	mov	r0, r4
 80006e0:	f000 f81c 	bl	800071c <__sfp>
 80006e4:	60a0      	str	r0, [r4, #8]
 80006e6:	4620      	mov	r0, r4
 80006e8:	f000 f818 	bl	800071c <__sfp>
 80006ec:	2200      	movs	r2, #0
 80006ee:	60e0      	str	r0, [r4, #12]
 80006f0:	2104      	movs	r1, #4
 80006f2:	6860      	ldr	r0, [r4, #4]
 80006f4:	f7ff ff82 	bl	80005fc <std>
 80006f8:	68a0      	ldr	r0, [r4, #8]
 80006fa:	2201      	movs	r2, #1
 80006fc:	2109      	movs	r1, #9
 80006fe:	f7ff ff7d 	bl	80005fc <std>
 8000702:	68e0      	ldr	r0, [r4, #12]
 8000704:	2202      	movs	r2, #2
 8000706:	2112      	movs	r1, #18
 8000708:	f7ff ff78 	bl	80005fc <std>
 800070c:	2301      	movs	r3, #1
 800070e:	61a3      	str	r3, [r4, #24]
 8000710:	e7d2      	b.n	80006b8 <__sinit+0xc>
 8000712:	bf00      	nop
 8000714:	0800151c 	.word	0x0800151c
 8000718:	08000645 	.word	0x08000645

0800071c <__sfp>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	4607      	mov	r7, r0
 8000720:	f7ff ffac 	bl	800067c <__sfp_lock_acquire>
 8000724:	4b1e      	ldr	r3, [pc, #120]	; (80007a0 <__sfp+0x84>)
 8000726:	681e      	ldr	r6, [r3, #0]
 8000728:	69b3      	ldr	r3, [r6, #24]
 800072a:	b913      	cbnz	r3, 8000732 <__sfp+0x16>
 800072c:	4630      	mov	r0, r6
 800072e:	f7ff ffbd 	bl	80006ac <__sinit>
 8000732:	3648      	adds	r6, #72	; 0x48
 8000734:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000738:	3b01      	subs	r3, #1
 800073a:	d503      	bpl.n	8000744 <__sfp+0x28>
 800073c:	6833      	ldr	r3, [r6, #0]
 800073e:	b30b      	cbz	r3, 8000784 <__sfp+0x68>
 8000740:	6836      	ldr	r6, [r6, #0]
 8000742:	e7f7      	b.n	8000734 <__sfp+0x18>
 8000744:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000748:	b9d5      	cbnz	r5, 8000780 <__sfp+0x64>
 800074a:	4b16      	ldr	r3, [pc, #88]	; (80007a4 <__sfp+0x88>)
 800074c:	60e3      	str	r3, [r4, #12]
 800074e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000752:	6665      	str	r5, [r4, #100]	; 0x64
 8000754:	f000 f847 	bl	80007e6 <__retarget_lock_init_recursive>
 8000758:	f7ff ff96 	bl	8000688 <__sfp_lock_release>
 800075c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000760:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000764:	6025      	str	r5, [r4, #0]
 8000766:	61a5      	str	r5, [r4, #24]
 8000768:	2208      	movs	r2, #8
 800076a:	4629      	mov	r1, r5
 800076c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000770:	f7ff ff24 	bl	80005bc <memset>
 8000774:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000778:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800077c:	4620      	mov	r0, r4
 800077e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000780:	3468      	adds	r4, #104	; 0x68
 8000782:	e7d9      	b.n	8000738 <__sfp+0x1c>
 8000784:	2104      	movs	r1, #4
 8000786:	4638      	mov	r0, r7
 8000788:	f7ff ff62 	bl	8000650 <__sfmoreglue>
 800078c:	4604      	mov	r4, r0
 800078e:	6030      	str	r0, [r6, #0]
 8000790:	2800      	cmp	r0, #0
 8000792:	d1d5      	bne.n	8000740 <__sfp+0x24>
 8000794:	f7ff ff78 	bl	8000688 <__sfp_lock_release>
 8000798:	230c      	movs	r3, #12
 800079a:	603b      	str	r3, [r7, #0]
 800079c:	e7ee      	b.n	800077c <__sfp+0x60>
 800079e:	bf00      	nop
 80007a0:	0800151c 	.word	0x0800151c
 80007a4:	ffff0001 	.word	0xffff0001

080007a8 <_fwalk_reent>:
 80007a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007ac:	4606      	mov	r6, r0
 80007ae:	4688      	mov	r8, r1
 80007b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007b4:	2700      	movs	r7, #0
 80007b6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007ba:	f1b9 0901 	subs.w	r9, r9, #1
 80007be:	d505      	bpl.n	80007cc <_fwalk_reent+0x24>
 80007c0:	6824      	ldr	r4, [r4, #0]
 80007c2:	2c00      	cmp	r4, #0
 80007c4:	d1f7      	bne.n	80007b6 <_fwalk_reent+0xe>
 80007c6:	4638      	mov	r0, r7
 80007c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007cc:	89ab      	ldrh	r3, [r5, #12]
 80007ce:	2b01      	cmp	r3, #1
 80007d0:	d907      	bls.n	80007e2 <_fwalk_reent+0x3a>
 80007d2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007d6:	3301      	adds	r3, #1
 80007d8:	d003      	beq.n	80007e2 <_fwalk_reent+0x3a>
 80007da:	4629      	mov	r1, r5
 80007dc:	4630      	mov	r0, r6
 80007de:	47c0      	blx	r8
 80007e0:	4307      	orrs	r7, r0
 80007e2:	3568      	adds	r5, #104	; 0x68
 80007e4:	e7e9      	b.n	80007ba <_fwalk_reent+0x12>

080007e6 <__retarget_lock_init_recursive>:
 80007e6:	4770      	bx	lr

080007e8 <__retarget_lock_acquire_recursive>:
 80007e8:	4770      	bx	lr

080007ea <__retarget_lock_release_recursive>:
 80007ea:	4770      	bx	lr

080007ec <sbrk_aligned>:
 80007ec:	b570      	push	{r4, r5, r6, lr}
 80007ee:	4e0e      	ldr	r6, [pc, #56]	; (8000828 <sbrk_aligned+0x3c>)
 80007f0:	460c      	mov	r4, r1
 80007f2:	6831      	ldr	r1, [r6, #0]
 80007f4:	4605      	mov	r5, r0
 80007f6:	b911      	cbnz	r1, 80007fe <sbrk_aligned+0x12>
 80007f8:	f000 fb7a 	bl	8000ef0 <_sbrk_r>
 80007fc:	6030      	str	r0, [r6, #0]
 80007fe:	4621      	mov	r1, r4
 8000800:	4628      	mov	r0, r5
 8000802:	f000 fb75 	bl	8000ef0 <_sbrk_r>
 8000806:	1c43      	adds	r3, r0, #1
 8000808:	d00a      	beq.n	8000820 <sbrk_aligned+0x34>
 800080a:	1cc4      	adds	r4, r0, #3
 800080c:	f024 0403 	bic.w	r4, r4, #3
 8000810:	42a0      	cmp	r0, r4
 8000812:	d007      	beq.n	8000824 <sbrk_aligned+0x38>
 8000814:	1a21      	subs	r1, r4, r0
 8000816:	4628      	mov	r0, r5
 8000818:	f000 fb6a 	bl	8000ef0 <_sbrk_r>
 800081c:	3001      	adds	r0, #1
 800081e:	d101      	bne.n	8000824 <sbrk_aligned+0x38>
 8000820:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000824:	4620      	mov	r0, r4
 8000826:	bd70      	pop	{r4, r5, r6, pc}
 8000828:	2000008c 	.word	0x2000008c

0800082c <_malloc_r>:
 800082c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000830:	1ccd      	adds	r5, r1, #3
 8000832:	f025 0503 	bic.w	r5, r5, #3
 8000836:	3508      	adds	r5, #8
 8000838:	2d0c      	cmp	r5, #12
 800083a:	bf38      	it	cc
 800083c:	250c      	movcc	r5, #12
 800083e:	2d00      	cmp	r5, #0
 8000840:	4607      	mov	r7, r0
 8000842:	db01      	blt.n	8000848 <_malloc_r+0x1c>
 8000844:	42a9      	cmp	r1, r5
 8000846:	d905      	bls.n	8000854 <_malloc_r+0x28>
 8000848:	230c      	movs	r3, #12
 800084a:	603b      	str	r3, [r7, #0]
 800084c:	2600      	movs	r6, #0
 800084e:	4630      	mov	r0, r6
 8000850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000854:	4e2e      	ldr	r6, [pc, #184]	; (8000910 <_malloc_r+0xe4>)
 8000856:	f000 fdbb 	bl	80013d0 <__malloc_lock>
 800085a:	6833      	ldr	r3, [r6, #0]
 800085c:	461c      	mov	r4, r3
 800085e:	bb34      	cbnz	r4, 80008ae <_malloc_r+0x82>
 8000860:	4629      	mov	r1, r5
 8000862:	4638      	mov	r0, r7
 8000864:	f7ff ffc2 	bl	80007ec <sbrk_aligned>
 8000868:	1c43      	adds	r3, r0, #1
 800086a:	4604      	mov	r4, r0
 800086c:	d14d      	bne.n	800090a <_malloc_r+0xde>
 800086e:	6834      	ldr	r4, [r6, #0]
 8000870:	4626      	mov	r6, r4
 8000872:	2e00      	cmp	r6, #0
 8000874:	d140      	bne.n	80008f8 <_malloc_r+0xcc>
 8000876:	6823      	ldr	r3, [r4, #0]
 8000878:	4631      	mov	r1, r6
 800087a:	4638      	mov	r0, r7
 800087c:	eb04 0803 	add.w	r8, r4, r3
 8000880:	f000 fb36 	bl	8000ef0 <_sbrk_r>
 8000884:	4580      	cmp	r8, r0
 8000886:	d13a      	bne.n	80008fe <_malloc_r+0xd2>
 8000888:	6821      	ldr	r1, [r4, #0]
 800088a:	3503      	adds	r5, #3
 800088c:	1a6d      	subs	r5, r5, r1
 800088e:	f025 0503 	bic.w	r5, r5, #3
 8000892:	3508      	adds	r5, #8
 8000894:	2d0c      	cmp	r5, #12
 8000896:	bf38      	it	cc
 8000898:	250c      	movcc	r5, #12
 800089a:	4629      	mov	r1, r5
 800089c:	4638      	mov	r0, r7
 800089e:	f7ff ffa5 	bl	80007ec <sbrk_aligned>
 80008a2:	3001      	adds	r0, #1
 80008a4:	d02b      	beq.n	80008fe <_malloc_r+0xd2>
 80008a6:	6823      	ldr	r3, [r4, #0]
 80008a8:	442b      	add	r3, r5
 80008aa:	6023      	str	r3, [r4, #0]
 80008ac:	e00e      	b.n	80008cc <_malloc_r+0xa0>
 80008ae:	6822      	ldr	r2, [r4, #0]
 80008b0:	1b52      	subs	r2, r2, r5
 80008b2:	d41e      	bmi.n	80008f2 <_malloc_r+0xc6>
 80008b4:	2a0b      	cmp	r2, #11
 80008b6:	d916      	bls.n	80008e6 <_malloc_r+0xba>
 80008b8:	1961      	adds	r1, r4, r5
 80008ba:	42a3      	cmp	r3, r4
 80008bc:	6025      	str	r5, [r4, #0]
 80008be:	bf18      	it	ne
 80008c0:	6059      	strne	r1, [r3, #4]
 80008c2:	6863      	ldr	r3, [r4, #4]
 80008c4:	bf08      	it	eq
 80008c6:	6031      	streq	r1, [r6, #0]
 80008c8:	5162      	str	r2, [r4, r5]
 80008ca:	604b      	str	r3, [r1, #4]
 80008cc:	4638      	mov	r0, r7
 80008ce:	f104 060b 	add.w	r6, r4, #11
 80008d2:	f000 fd83 	bl	80013dc <__malloc_unlock>
 80008d6:	f026 0607 	bic.w	r6, r6, #7
 80008da:	1d23      	adds	r3, r4, #4
 80008dc:	1af2      	subs	r2, r6, r3
 80008de:	d0b6      	beq.n	800084e <_malloc_r+0x22>
 80008e0:	1b9b      	subs	r3, r3, r6
 80008e2:	50a3      	str	r3, [r4, r2]
 80008e4:	e7b3      	b.n	800084e <_malloc_r+0x22>
 80008e6:	6862      	ldr	r2, [r4, #4]
 80008e8:	42a3      	cmp	r3, r4
 80008ea:	bf0c      	ite	eq
 80008ec:	6032      	streq	r2, [r6, #0]
 80008ee:	605a      	strne	r2, [r3, #4]
 80008f0:	e7ec      	b.n	80008cc <_malloc_r+0xa0>
 80008f2:	4623      	mov	r3, r4
 80008f4:	6864      	ldr	r4, [r4, #4]
 80008f6:	e7b2      	b.n	800085e <_malloc_r+0x32>
 80008f8:	4634      	mov	r4, r6
 80008fa:	6876      	ldr	r6, [r6, #4]
 80008fc:	e7b9      	b.n	8000872 <_malloc_r+0x46>
 80008fe:	230c      	movs	r3, #12
 8000900:	603b      	str	r3, [r7, #0]
 8000902:	4638      	mov	r0, r7
 8000904:	f000 fd6a 	bl	80013dc <__malloc_unlock>
 8000908:	e7a1      	b.n	800084e <_malloc_r+0x22>
 800090a:	6025      	str	r5, [r4, #0]
 800090c:	e7de      	b.n	80008cc <_malloc_r+0xa0>
 800090e:	bf00      	nop
 8000910:	20000088 	.word	0x20000088

08000914 <__sfputc_r>:
 8000914:	6893      	ldr	r3, [r2, #8]
 8000916:	3b01      	subs	r3, #1
 8000918:	2b00      	cmp	r3, #0
 800091a:	b410      	push	{r4}
 800091c:	6093      	str	r3, [r2, #8]
 800091e:	da08      	bge.n	8000932 <__sfputc_r+0x1e>
 8000920:	6994      	ldr	r4, [r2, #24]
 8000922:	42a3      	cmp	r3, r4
 8000924:	db01      	blt.n	800092a <__sfputc_r+0x16>
 8000926:	290a      	cmp	r1, #10
 8000928:	d103      	bne.n	8000932 <__sfputc_r+0x1e>
 800092a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800092e:	f000 bb33 	b.w	8000f98 <__swbuf_r>
 8000932:	6813      	ldr	r3, [r2, #0]
 8000934:	1c58      	adds	r0, r3, #1
 8000936:	6010      	str	r0, [r2, #0]
 8000938:	7019      	strb	r1, [r3, #0]
 800093a:	4608      	mov	r0, r1
 800093c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000940:	4770      	bx	lr

08000942 <__sfputs_r>:
 8000942:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000944:	4606      	mov	r6, r0
 8000946:	460f      	mov	r7, r1
 8000948:	4614      	mov	r4, r2
 800094a:	18d5      	adds	r5, r2, r3
 800094c:	42ac      	cmp	r4, r5
 800094e:	d101      	bne.n	8000954 <__sfputs_r+0x12>
 8000950:	2000      	movs	r0, #0
 8000952:	e007      	b.n	8000964 <__sfputs_r+0x22>
 8000954:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000958:	463a      	mov	r2, r7
 800095a:	4630      	mov	r0, r6
 800095c:	f7ff ffda 	bl	8000914 <__sfputc_r>
 8000960:	1c43      	adds	r3, r0, #1
 8000962:	d1f3      	bne.n	800094c <__sfputs_r+0xa>
 8000964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000968 <_vfiprintf_r>:
 8000968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800096c:	460d      	mov	r5, r1
 800096e:	b09d      	sub	sp, #116	; 0x74
 8000970:	4614      	mov	r4, r2
 8000972:	4698      	mov	r8, r3
 8000974:	4606      	mov	r6, r0
 8000976:	b118      	cbz	r0, 8000980 <_vfiprintf_r+0x18>
 8000978:	6983      	ldr	r3, [r0, #24]
 800097a:	b90b      	cbnz	r3, 8000980 <_vfiprintf_r+0x18>
 800097c:	f7ff fe96 	bl	80006ac <__sinit>
 8000980:	4b89      	ldr	r3, [pc, #548]	; (8000ba8 <_vfiprintf_r+0x240>)
 8000982:	429d      	cmp	r5, r3
 8000984:	d11b      	bne.n	80009be <_vfiprintf_r+0x56>
 8000986:	6875      	ldr	r5, [r6, #4]
 8000988:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800098a:	07d9      	lsls	r1, r3, #31
 800098c:	d405      	bmi.n	800099a <_vfiprintf_r+0x32>
 800098e:	89ab      	ldrh	r3, [r5, #12]
 8000990:	059a      	lsls	r2, r3, #22
 8000992:	d402      	bmi.n	800099a <_vfiprintf_r+0x32>
 8000994:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000996:	f7ff ff27 	bl	80007e8 <__retarget_lock_acquire_recursive>
 800099a:	89ab      	ldrh	r3, [r5, #12]
 800099c:	071b      	lsls	r3, r3, #28
 800099e:	d501      	bpl.n	80009a4 <_vfiprintf_r+0x3c>
 80009a0:	692b      	ldr	r3, [r5, #16]
 80009a2:	b9eb      	cbnz	r3, 80009e0 <_vfiprintf_r+0x78>
 80009a4:	4629      	mov	r1, r5
 80009a6:	4630      	mov	r0, r6
 80009a8:	f000 fb5a 	bl	8001060 <__swsetup_r>
 80009ac:	b1c0      	cbz	r0, 80009e0 <_vfiprintf_r+0x78>
 80009ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009b0:	07dc      	lsls	r4, r3, #31
 80009b2:	d50e      	bpl.n	80009d2 <_vfiprintf_r+0x6a>
 80009b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009b8:	b01d      	add	sp, #116	; 0x74
 80009ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009be:	4b7b      	ldr	r3, [pc, #492]	; (8000bac <_vfiprintf_r+0x244>)
 80009c0:	429d      	cmp	r5, r3
 80009c2:	d101      	bne.n	80009c8 <_vfiprintf_r+0x60>
 80009c4:	68b5      	ldr	r5, [r6, #8]
 80009c6:	e7df      	b.n	8000988 <_vfiprintf_r+0x20>
 80009c8:	4b79      	ldr	r3, [pc, #484]	; (8000bb0 <_vfiprintf_r+0x248>)
 80009ca:	429d      	cmp	r5, r3
 80009cc:	bf08      	it	eq
 80009ce:	68f5      	ldreq	r5, [r6, #12]
 80009d0:	e7da      	b.n	8000988 <_vfiprintf_r+0x20>
 80009d2:	89ab      	ldrh	r3, [r5, #12]
 80009d4:	0598      	lsls	r0, r3, #22
 80009d6:	d4ed      	bmi.n	80009b4 <_vfiprintf_r+0x4c>
 80009d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009da:	f7ff ff06 	bl	80007ea <__retarget_lock_release_recursive>
 80009de:	e7e9      	b.n	80009b4 <_vfiprintf_r+0x4c>
 80009e0:	2300      	movs	r3, #0
 80009e2:	9309      	str	r3, [sp, #36]	; 0x24
 80009e4:	2320      	movs	r3, #32
 80009e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80009ee:	2330      	movs	r3, #48	; 0x30
 80009f0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000bb4 <_vfiprintf_r+0x24c>
 80009f4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009f8:	f04f 0901 	mov.w	r9, #1
 80009fc:	4623      	mov	r3, r4
 80009fe:	469a      	mov	sl, r3
 8000a00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a04:	b10a      	cbz	r2, 8000a0a <_vfiprintf_r+0xa2>
 8000a06:	2a25      	cmp	r2, #37	; 0x25
 8000a08:	d1f9      	bne.n	80009fe <_vfiprintf_r+0x96>
 8000a0a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a0e:	d00b      	beq.n	8000a28 <_vfiprintf_r+0xc0>
 8000a10:	465b      	mov	r3, fp
 8000a12:	4622      	mov	r2, r4
 8000a14:	4629      	mov	r1, r5
 8000a16:	4630      	mov	r0, r6
 8000a18:	f7ff ff93 	bl	8000942 <__sfputs_r>
 8000a1c:	3001      	adds	r0, #1
 8000a1e:	f000 80aa 	beq.w	8000b76 <_vfiprintf_r+0x20e>
 8000a22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a24:	445a      	add	r2, fp
 8000a26:	9209      	str	r2, [sp, #36]	; 0x24
 8000a28:	f89a 3000 	ldrb.w	r3, [sl]
 8000a2c:	2b00      	cmp	r3, #0
 8000a2e:	f000 80a2 	beq.w	8000b76 <_vfiprintf_r+0x20e>
 8000a32:	2300      	movs	r3, #0
 8000a34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000a38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a3c:	f10a 0a01 	add.w	sl, sl, #1
 8000a40:	9304      	str	r3, [sp, #16]
 8000a42:	9307      	str	r3, [sp, #28]
 8000a44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a48:	931a      	str	r3, [sp, #104]	; 0x68
 8000a4a:	4654      	mov	r4, sl
 8000a4c:	2205      	movs	r2, #5
 8000a4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a52:	4858      	ldr	r0, [pc, #352]	; (8000bb4 <_vfiprintf_r+0x24c>)
 8000a54:	f7ff fbc4 	bl	80001e0 <memchr>
 8000a58:	9a04      	ldr	r2, [sp, #16]
 8000a5a:	b9d8      	cbnz	r0, 8000a94 <_vfiprintf_r+0x12c>
 8000a5c:	06d1      	lsls	r1, r2, #27
 8000a5e:	bf44      	itt	mi
 8000a60:	2320      	movmi	r3, #32
 8000a62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a66:	0713      	lsls	r3, r2, #28
 8000a68:	bf44      	itt	mi
 8000a6a:	232b      	movmi	r3, #43	; 0x2b
 8000a6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a70:	f89a 3000 	ldrb.w	r3, [sl]
 8000a74:	2b2a      	cmp	r3, #42	; 0x2a
 8000a76:	d015      	beq.n	8000aa4 <_vfiprintf_r+0x13c>
 8000a78:	9a07      	ldr	r2, [sp, #28]
 8000a7a:	4654      	mov	r4, sl
 8000a7c:	2000      	movs	r0, #0
 8000a7e:	f04f 0c0a 	mov.w	ip, #10
 8000a82:	4621      	mov	r1, r4
 8000a84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a88:	3b30      	subs	r3, #48	; 0x30
 8000a8a:	2b09      	cmp	r3, #9
 8000a8c:	d94e      	bls.n	8000b2c <_vfiprintf_r+0x1c4>
 8000a8e:	b1b0      	cbz	r0, 8000abe <_vfiprintf_r+0x156>
 8000a90:	9207      	str	r2, [sp, #28]
 8000a92:	e014      	b.n	8000abe <_vfiprintf_r+0x156>
 8000a94:	eba0 0308 	sub.w	r3, r0, r8
 8000a98:	fa09 f303 	lsl.w	r3, r9, r3
 8000a9c:	4313      	orrs	r3, r2
 8000a9e:	9304      	str	r3, [sp, #16]
 8000aa0:	46a2      	mov	sl, r4
 8000aa2:	e7d2      	b.n	8000a4a <_vfiprintf_r+0xe2>
 8000aa4:	9b03      	ldr	r3, [sp, #12]
 8000aa6:	1d19      	adds	r1, r3, #4
 8000aa8:	681b      	ldr	r3, [r3, #0]
 8000aaa:	9103      	str	r1, [sp, #12]
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	bfbb      	ittet	lt
 8000ab0:	425b      	neglt	r3, r3
 8000ab2:	f042 0202 	orrlt.w	r2, r2, #2
 8000ab6:	9307      	strge	r3, [sp, #28]
 8000ab8:	9307      	strlt	r3, [sp, #28]
 8000aba:	bfb8      	it	lt
 8000abc:	9204      	strlt	r2, [sp, #16]
 8000abe:	7823      	ldrb	r3, [r4, #0]
 8000ac0:	2b2e      	cmp	r3, #46	; 0x2e
 8000ac2:	d10c      	bne.n	8000ade <_vfiprintf_r+0x176>
 8000ac4:	7863      	ldrb	r3, [r4, #1]
 8000ac6:	2b2a      	cmp	r3, #42	; 0x2a
 8000ac8:	d135      	bne.n	8000b36 <_vfiprintf_r+0x1ce>
 8000aca:	9b03      	ldr	r3, [sp, #12]
 8000acc:	1d1a      	adds	r2, r3, #4
 8000ace:	681b      	ldr	r3, [r3, #0]
 8000ad0:	9203      	str	r2, [sp, #12]
 8000ad2:	2b00      	cmp	r3, #0
 8000ad4:	bfb8      	it	lt
 8000ad6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000ada:	3402      	adds	r4, #2
 8000adc:	9305      	str	r3, [sp, #20]
 8000ade:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000bc4 <_vfiprintf_r+0x25c>
 8000ae2:	7821      	ldrb	r1, [r4, #0]
 8000ae4:	2203      	movs	r2, #3
 8000ae6:	4650      	mov	r0, sl
 8000ae8:	f7ff fb7a 	bl	80001e0 <memchr>
 8000aec:	b140      	cbz	r0, 8000b00 <_vfiprintf_r+0x198>
 8000aee:	2340      	movs	r3, #64	; 0x40
 8000af0:	eba0 000a 	sub.w	r0, r0, sl
 8000af4:	fa03 f000 	lsl.w	r0, r3, r0
 8000af8:	9b04      	ldr	r3, [sp, #16]
 8000afa:	4303      	orrs	r3, r0
 8000afc:	3401      	adds	r4, #1
 8000afe:	9304      	str	r3, [sp, #16]
 8000b00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b04:	482c      	ldr	r0, [pc, #176]	; (8000bb8 <_vfiprintf_r+0x250>)
 8000b06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b0a:	2206      	movs	r2, #6
 8000b0c:	f7ff fb68 	bl	80001e0 <memchr>
 8000b10:	2800      	cmp	r0, #0
 8000b12:	d03f      	beq.n	8000b94 <_vfiprintf_r+0x22c>
 8000b14:	4b29      	ldr	r3, [pc, #164]	; (8000bbc <_vfiprintf_r+0x254>)
 8000b16:	bb1b      	cbnz	r3, 8000b60 <_vfiprintf_r+0x1f8>
 8000b18:	9b03      	ldr	r3, [sp, #12]
 8000b1a:	3307      	adds	r3, #7
 8000b1c:	f023 0307 	bic.w	r3, r3, #7
 8000b20:	3308      	adds	r3, #8
 8000b22:	9303      	str	r3, [sp, #12]
 8000b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b26:	443b      	add	r3, r7
 8000b28:	9309      	str	r3, [sp, #36]	; 0x24
 8000b2a:	e767      	b.n	80009fc <_vfiprintf_r+0x94>
 8000b2c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b30:	460c      	mov	r4, r1
 8000b32:	2001      	movs	r0, #1
 8000b34:	e7a5      	b.n	8000a82 <_vfiprintf_r+0x11a>
 8000b36:	2300      	movs	r3, #0
 8000b38:	3401      	adds	r4, #1
 8000b3a:	9305      	str	r3, [sp, #20]
 8000b3c:	4619      	mov	r1, r3
 8000b3e:	f04f 0c0a 	mov.w	ip, #10
 8000b42:	4620      	mov	r0, r4
 8000b44:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b48:	3a30      	subs	r2, #48	; 0x30
 8000b4a:	2a09      	cmp	r2, #9
 8000b4c:	d903      	bls.n	8000b56 <_vfiprintf_r+0x1ee>
 8000b4e:	2b00      	cmp	r3, #0
 8000b50:	d0c5      	beq.n	8000ade <_vfiprintf_r+0x176>
 8000b52:	9105      	str	r1, [sp, #20]
 8000b54:	e7c3      	b.n	8000ade <_vfiprintf_r+0x176>
 8000b56:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b5a:	4604      	mov	r4, r0
 8000b5c:	2301      	movs	r3, #1
 8000b5e:	e7f0      	b.n	8000b42 <_vfiprintf_r+0x1da>
 8000b60:	ab03      	add	r3, sp, #12
 8000b62:	9300      	str	r3, [sp, #0]
 8000b64:	462a      	mov	r2, r5
 8000b66:	4b16      	ldr	r3, [pc, #88]	; (8000bc0 <_vfiprintf_r+0x258>)
 8000b68:	a904      	add	r1, sp, #16
 8000b6a:	4630      	mov	r0, r6
 8000b6c:	f3af 8000 	nop.w
 8000b70:	4607      	mov	r7, r0
 8000b72:	1c78      	adds	r0, r7, #1
 8000b74:	d1d6      	bne.n	8000b24 <_vfiprintf_r+0x1bc>
 8000b76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b78:	07d9      	lsls	r1, r3, #31
 8000b7a:	d405      	bmi.n	8000b88 <_vfiprintf_r+0x220>
 8000b7c:	89ab      	ldrh	r3, [r5, #12]
 8000b7e:	059a      	lsls	r2, r3, #22
 8000b80:	d402      	bmi.n	8000b88 <_vfiprintf_r+0x220>
 8000b82:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b84:	f7ff fe31 	bl	80007ea <__retarget_lock_release_recursive>
 8000b88:	89ab      	ldrh	r3, [r5, #12]
 8000b8a:	065b      	lsls	r3, r3, #25
 8000b8c:	f53f af12 	bmi.w	80009b4 <_vfiprintf_r+0x4c>
 8000b90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b92:	e711      	b.n	80009b8 <_vfiprintf_r+0x50>
 8000b94:	ab03      	add	r3, sp, #12
 8000b96:	9300      	str	r3, [sp, #0]
 8000b98:	462a      	mov	r2, r5
 8000b9a:	4b09      	ldr	r3, [pc, #36]	; (8000bc0 <_vfiprintf_r+0x258>)
 8000b9c:	a904      	add	r1, sp, #16
 8000b9e:	4630      	mov	r0, r6
 8000ba0:	f000 f880 	bl	8000ca4 <_printf_i>
 8000ba4:	e7e4      	b.n	8000b70 <_vfiprintf_r+0x208>
 8000ba6:	bf00      	nop
 8000ba8:	08001540 	.word	0x08001540
 8000bac:	08001560 	.word	0x08001560
 8000bb0:	08001520 	.word	0x08001520
 8000bb4:	08001580 	.word	0x08001580
 8000bb8:	0800158a 	.word	0x0800158a
 8000bbc:	00000000 	.word	0x00000000
 8000bc0:	08000943 	.word	0x08000943
 8000bc4:	08001586 	.word	0x08001586

08000bc8 <_printf_common>:
 8000bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bcc:	4616      	mov	r6, r2
 8000bce:	4699      	mov	r9, r3
 8000bd0:	688a      	ldr	r2, [r1, #8]
 8000bd2:	690b      	ldr	r3, [r1, #16]
 8000bd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bd8:	4293      	cmp	r3, r2
 8000bda:	bfb8      	it	lt
 8000bdc:	4613      	movlt	r3, r2
 8000bde:	6033      	str	r3, [r6, #0]
 8000be0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000be4:	4607      	mov	r7, r0
 8000be6:	460c      	mov	r4, r1
 8000be8:	b10a      	cbz	r2, 8000bee <_printf_common+0x26>
 8000bea:	3301      	adds	r3, #1
 8000bec:	6033      	str	r3, [r6, #0]
 8000bee:	6823      	ldr	r3, [r4, #0]
 8000bf0:	0699      	lsls	r1, r3, #26
 8000bf2:	bf42      	ittt	mi
 8000bf4:	6833      	ldrmi	r3, [r6, #0]
 8000bf6:	3302      	addmi	r3, #2
 8000bf8:	6033      	strmi	r3, [r6, #0]
 8000bfa:	6825      	ldr	r5, [r4, #0]
 8000bfc:	f015 0506 	ands.w	r5, r5, #6
 8000c00:	d106      	bne.n	8000c10 <_printf_common+0x48>
 8000c02:	f104 0a19 	add.w	sl, r4, #25
 8000c06:	68e3      	ldr	r3, [r4, #12]
 8000c08:	6832      	ldr	r2, [r6, #0]
 8000c0a:	1a9b      	subs	r3, r3, r2
 8000c0c:	42ab      	cmp	r3, r5
 8000c0e:	dc26      	bgt.n	8000c5e <_printf_common+0x96>
 8000c10:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c14:	1e13      	subs	r3, r2, #0
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	bf18      	it	ne
 8000c1a:	2301      	movne	r3, #1
 8000c1c:	0692      	lsls	r2, r2, #26
 8000c1e:	d42b      	bmi.n	8000c78 <_printf_common+0xb0>
 8000c20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c24:	4649      	mov	r1, r9
 8000c26:	4638      	mov	r0, r7
 8000c28:	47c0      	blx	r8
 8000c2a:	3001      	adds	r0, #1
 8000c2c:	d01e      	beq.n	8000c6c <_printf_common+0xa4>
 8000c2e:	6823      	ldr	r3, [r4, #0]
 8000c30:	68e5      	ldr	r5, [r4, #12]
 8000c32:	6832      	ldr	r2, [r6, #0]
 8000c34:	f003 0306 	and.w	r3, r3, #6
 8000c38:	2b04      	cmp	r3, #4
 8000c3a:	bf08      	it	eq
 8000c3c:	1aad      	subeq	r5, r5, r2
 8000c3e:	68a3      	ldr	r3, [r4, #8]
 8000c40:	6922      	ldr	r2, [r4, #16]
 8000c42:	bf0c      	ite	eq
 8000c44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c48:	2500      	movne	r5, #0
 8000c4a:	4293      	cmp	r3, r2
 8000c4c:	bfc4      	itt	gt
 8000c4e:	1a9b      	subgt	r3, r3, r2
 8000c50:	18ed      	addgt	r5, r5, r3
 8000c52:	2600      	movs	r6, #0
 8000c54:	341a      	adds	r4, #26
 8000c56:	42b5      	cmp	r5, r6
 8000c58:	d11a      	bne.n	8000c90 <_printf_common+0xc8>
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	e008      	b.n	8000c70 <_printf_common+0xa8>
 8000c5e:	2301      	movs	r3, #1
 8000c60:	4652      	mov	r2, sl
 8000c62:	4649      	mov	r1, r9
 8000c64:	4638      	mov	r0, r7
 8000c66:	47c0      	blx	r8
 8000c68:	3001      	adds	r0, #1
 8000c6a:	d103      	bne.n	8000c74 <_printf_common+0xac>
 8000c6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000c70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c74:	3501      	adds	r5, #1
 8000c76:	e7c6      	b.n	8000c06 <_printf_common+0x3e>
 8000c78:	18e1      	adds	r1, r4, r3
 8000c7a:	1c5a      	adds	r2, r3, #1
 8000c7c:	2030      	movs	r0, #48	; 0x30
 8000c7e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c82:	4422      	add	r2, r4
 8000c84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c88:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c8c:	3302      	adds	r3, #2
 8000c8e:	e7c7      	b.n	8000c20 <_printf_common+0x58>
 8000c90:	2301      	movs	r3, #1
 8000c92:	4622      	mov	r2, r4
 8000c94:	4649      	mov	r1, r9
 8000c96:	4638      	mov	r0, r7
 8000c98:	47c0      	blx	r8
 8000c9a:	3001      	adds	r0, #1
 8000c9c:	d0e6      	beq.n	8000c6c <_printf_common+0xa4>
 8000c9e:	3601      	adds	r6, #1
 8000ca0:	e7d9      	b.n	8000c56 <_printf_common+0x8e>
	...

08000ca4 <_printf_i>:
 8000ca4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ca8:	7e0f      	ldrb	r7, [r1, #24]
 8000caa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cac:	2f78      	cmp	r7, #120	; 0x78
 8000cae:	4691      	mov	r9, r2
 8000cb0:	4680      	mov	r8, r0
 8000cb2:	460c      	mov	r4, r1
 8000cb4:	469a      	mov	sl, r3
 8000cb6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cba:	d807      	bhi.n	8000ccc <_printf_i+0x28>
 8000cbc:	2f62      	cmp	r7, #98	; 0x62
 8000cbe:	d80a      	bhi.n	8000cd6 <_printf_i+0x32>
 8000cc0:	2f00      	cmp	r7, #0
 8000cc2:	f000 80d8 	beq.w	8000e76 <_printf_i+0x1d2>
 8000cc6:	2f58      	cmp	r7, #88	; 0x58
 8000cc8:	f000 80a3 	beq.w	8000e12 <_printf_i+0x16e>
 8000ccc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cd0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000cd4:	e03a      	b.n	8000d4c <_printf_i+0xa8>
 8000cd6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000cda:	2b15      	cmp	r3, #21
 8000cdc:	d8f6      	bhi.n	8000ccc <_printf_i+0x28>
 8000cde:	a101      	add	r1, pc, #4	; (adr r1, 8000ce4 <_printf_i+0x40>)
 8000ce0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ce4:	08000d3d 	.word	0x08000d3d
 8000ce8:	08000d51 	.word	0x08000d51
 8000cec:	08000ccd 	.word	0x08000ccd
 8000cf0:	08000ccd 	.word	0x08000ccd
 8000cf4:	08000ccd 	.word	0x08000ccd
 8000cf8:	08000ccd 	.word	0x08000ccd
 8000cfc:	08000d51 	.word	0x08000d51
 8000d00:	08000ccd 	.word	0x08000ccd
 8000d04:	08000ccd 	.word	0x08000ccd
 8000d08:	08000ccd 	.word	0x08000ccd
 8000d0c:	08000ccd 	.word	0x08000ccd
 8000d10:	08000e5d 	.word	0x08000e5d
 8000d14:	08000d81 	.word	0x08000d81
 8000d18:	08000e3f 	.word	0x08000e3f
 8000d1c:	08000ccd 	.word	0x08000ccd
 8000d20:	08000ccd 	.word	0x08000ccd
 8000d24:	08000e7f 	.word	0x08000e7f
 8000d28:	08000ccd 	.word	0x08000ccd
 8000d2c:	08000d81 	.word	0x08000d81
 8000d30:	08000ccd 	.word	0x08000ccd
 8000d34:	08000ccd 	.word	0x08000ccd
 8000d38:	08000e47 	.word	0x08000e47
 8000d3c:	682b      	ldr	r3, [r5, #0]
 8000d3e:	1d1a      	adds	r2, r3, #4
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	602a      	str	r2, [r5, #0]
 8000d44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d48:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d4c:	2301      	movs	r3, #1
 8000d4e:	e0a3      	b.n	8000e98 <_printf_i+0x1f4>
 8000d50:	6820      	ldr	r0, [r4, #0]
 8000d52:	6829      	ldr	r1, [r5, #0]
 8000d54:	0606      	lsls	r6, r0, #24
 8000d56:	f101 0304 	add.w	r3, r1, #4
 8000d5a:	d50a      	bpl.n	8000d72 <_printf_i+0xce>
 8000d5c:	680e      	ldr	r6, [r1, #0]
 8000d5e:	602b      	str	r3, [r5, #0]
 8000d60:	2e00      	cmp	r6, #0
 8000d62:	da03      	bge.n	8000d6c <_printf_i+0xc8>
 8000d64:	232d      	movs	r3, #45	; 0x2d
 8000d66:	4276      	negs	r6, r6
 8000d68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d6c:	485e      	ldr	r0, [pc, #376]	; (8000ee8 <_printf_i+0x244>)
 8000d6e:	230a      	movs	r3, #10
 8000d70:	e019      	b.n	8000da6 <_printf_i+0x102>
 8000d72:	680e      	ldr	r6, [r1, #0]
 8000d74:	602b      	str	r3, [r5, #0]
 8000d76:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d7a:	bf18      	it	ne
 8000d7c:	b236      	sxthne	r6, r6
 8000d7e:	e7ef      	b.n	8000d60 <_printf_i+0xbc>
 8000d80:	682b      	ldr	r3, [r5, #0]
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	1d19      	adds	r1, r3, #4
 8000d86:	6029      	str	r1, [r5, #0]
 8000d88:	0601      	lsls	r1, r0, #24
 8000d8a:	d501      	bpl.n	8000d90 <_printf_i+0xec>
 8000d8c:	681e      	ldr	r6, [r3, #0]
 8000d8e:	e002      	b.n	8000d96 <_printf_i+0xf2>
 8000d90:	0646      	lsls	r6, r0, #25
 8000d92:	d5fb      	bpl.n	8000d8c <_printf_i+0xe8>
 8000d94:	881e      	ldrh	r6, [r3, #0]
 8000d96:	4854      	ldr	r0, [pc, #336]	; (8000ee8 <_printf_i+0x244>)
 8000d98:	2f6f      	cmp	r7, #111	; 0x6f
 8000d9a:	bf0c      	ite	eq
 8000d9c:	2308      	moveq	r3, #8
 8000d9e:	230a      	movne	r3, #10
 8000da0:	2100      	movs	r1, #0
 8000da2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000da6:	6865      	ldr	r5, [r4, #4]
 8000da8:	60a5      	str	r5, [r4, #8]
 8000daa:	2d00      	cmp	r5, #0
 8000dac:	bfa2      	ittt	ge
 8000dae:	6821      	ldrge	r1, [r4, #0]
 8000db0:	f021 0104 	bicge.w	r1, r1, #4
 8000db4:	6021      	strge	r1, [r4, #0]
 8000db6:	b90e      	cbnz	r6, 8000dbc <_printf_i+0x118>
 8000db8:	2d00      	cmp	r5, #0
 8000dba:	d04d      	beq.n	8000e58 <_printf_i+0x1b4>
 8000dbc:	4615      	mov	r5, r2
 8000dbe:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dc2:	fb03 6711 	mls	r7, r3, r1, r6
 8000dc6:	5dc7      	ldrb	r7, [r0, r7]
 8000dc8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000dcc:	4637      	mov	r7, r6
 8000dce:	42bb      	cmp	r3, r7
 8000dd0:	460e      	mov	r6, r1
 8000dd2:	d9f4      	bls.n	8000dbe <_printf_i+0x11a>
 8000dd4:	2b08      	cmp	r3, #8
 8000dd6:	d10b      	bne.n	8000df0 <_printf_i+0x14c>
 8000dd8:	6823      	ldr	r3, [r4, #0]
 8000dda:	07de      	lsls	r6, r3, #31
 8000ddc:	d508      	bpl.n	8000df0 <_printf_i+0x14c>
 8000dde:	6923      	ldr	r3, [r4, #16]
 8000de0:	6861      	ldr	r1, [r4, #4]
 8000de2:	4299      	cmp	r1, r3
 8000de4:	bfde      	ittt	le
 8000de6:	2330      	movle	r3, #48	; 0x30
 8000de8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000dec:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000df0:	1b52      	subs	r2, r2, r5
 8000df2:	6122      	str	r2, [r4, #16]
 8000df4:	f8cd a000 	str.w	sl, [sp]
 8000df8:	464b      	mov	r3, r9
 8000dfa:	aa03      	add	r2, sp, #12
 8000dfc:	4621      	mov	r1, r4
 8000dfe:	4640      	mov	r0, r8
 8000e00:	f7ff fee2 	bl	8000bc8 <_printf_common>
 8000e04:	3001      	adds	r0, #1
 8000e06:	d14c      	bne.n	8000ea2 <_printf_i+0x1fe>
 8000e08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e0c:	b004      	add	sp, #16
 8000e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e12:	4835      	ldr	r0, [pc, #212]	; (8000ee8 <_printf_i+0x244>)
 8000e14:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000e18:	6829      	ldr	r1, [r5, #0]
 8000e1a:	6823      	ldr	r3, [r4, #0]
 8000e1c:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e20:	6029      	str	r1, [r5, #0]
 8000e22:	061d      	lsls	r5, r3, #24
 8000e24:	d514      	bpl.n	8000e50 <_printf_i+0x1ac>
 8000e26:	07df      	lsls	r7, r3, #31
 8000e28:	bf44      	itt	mi
 8000e2a:	f043 0320 	orrmi.w	r3, r3, #32
 8000e2e:	6023      	strmi	r3, [r4, #0]
 8000e30:	b91e      	cbnz	r6, 8000e3a <_printf_i+0x196>
 8000e32:	6823      	ldr	r3, [r4, #0]
 8000e34:	f023 0320 	bic.w	r3, r3, #32
 8000e38:	6023      	str	r3, [r4, #0]
 8000e3a:	2310      	movs	r3, #16
 8000e3c:	e7b0      	b.n	8000da0 <_printf_i+0xfc>
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	f043 0320 	orr.w	r3, r3, #32
 8000e44:	6023      	str	r3, [r4, #0]
 8000e46:	2378      	movs	r3, #120	; 0x78
 8000e48:	4828      	ldr	r0, [pc, #160]	; (8000eec <_printf_i+0x248>)
 8000e4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e4e:	e7e3      	b.n	8000e18 <_printf_i+0x174>
 8000e50:	0659      	lsls	r1, r3, #25
 8000e52:	bf48      	it	mi
 8000e54:	b2b6      	uxthmi	r6, r6
 8000e56:	e7e6      	b.n	8000e26 <_printf_i+0x182>
 8000e58:	4615      	mov	r5, r2
 8000e5a:	e7bb      	b.n	8000dd4 <_printf_i+0x130>
 8000e5c:	682b      	ldr	r3, [r5, #0]
 8000e5e:	6826      	ldr	r6, [r4, #0]
 8000e60:	6961      	ldr	r1, [r4, #20]
 8000e62:	1d18      	adds	r0, r3, #4
 8000e64:	6028      	str	r0, [r5, #0]
 8000e66:	0635      	lsls	r5, r6, #24
 8000e68:	681b      	ldr	r3, [r3, #0]
 8000e6a:	d501      	bpl.n	8000e70 <_printf_i+0x1cc>
 8000e6c:	6019      	str	r1, [r3, #0]
 8000e6e:	e002      	b.n	8000e76 <_printf_i+0x1d2>
 8000e70:	0670      	lsls	r0, r6, #25
 8000e72:	d5fb      	bpl.n	8000e6c <_printf_i+0x1c8>
 8000e74:	8019      	strh	r1, [r3, #0]
 8000e76:	2300      	movs	r3, #0
 8000e78:	6123      	str	r3, [r4, #16]
 8000e7a:	4615      	mov	r5, r2
 8000e7c:	e7ba      	b.n	8000df4 <_printf_i+0x150>
 8000e7e:	682b      	ldr	r3, [r5, #0]
 8000e80:	1d1a      	adds	r2, r3, #4
 8000e82:	602a      	str	r2, [r5, #0]
 8000e84:	681d      	ldr	r5, [r3, #0]
 8000e86:	6862      	ldr	r2, [r4, #4]
 8000e88:	2100      	movs	r1, #0
 8000e8a:	4628      	mov	r0, r5
 8000e8c:	f7ff f9a8 	bl	80001e0 <memchr>
 8000e90:	b108      	cbz	r0, 8000e96 <_printf_i+0x1f2>
 8000e92:	1b40      	subs	r0, r0, r5
 8000e94:	6060      	str	r0, [r4, #4]
 8000e96:	6863      	ldr	r3, [r4, #4]
 8000e98:	6123      	str	r3, [r4, #16]
 8000e9a:	2300      	movs	r3, #0
 8000e9c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ea0:	e7a8      	b.n	8000df4 <_printf_i+0x150>
 8000ea2:	6923      	ldr	r3, [r4, #16]
 8000ea4:	462a      	mov	r2, r5
 8000ea6:	4649      	mov	r1, r9
 8000ea8:	4640      	mov	r0, r8
 8000eaa:	47d0      	blx	sl
 8000eac:	3001      	adds	r0, #1
 8000eae:	d0ab      	beq.n	8000e08 <_printf_i+0x164>
 8000eb0:	6823      	ldr	r3, [r4, #0]
 8000eb2:	079b      	lsls	r3, r3, #30
 8000eb4:	d413      	bmi.n	8000ede <_printf_i+0x23a>
 8000eb6:	68e0      	ldr	r0, [r4, #12]
 8000eb8:	9b03      	ldr	r3, [sp, #12]
 8000eba:	4298      	cmp	r0, r3
 8000ebc:	bfb8      	it	lt
 8000ebe:	4618      	movlt	r0, r3
 8000ec0:	e7a4      	b.n	8000e0c <_printf_i+0x168>
 8000ec2:	2301      	movs	r3, #1
 8000ec4:	4632      	mov	r2, r6
 8000ec6:	4649      	mov	r1, r9
 8000ec8:	4640      	mov	r0, r8
 8000eca:	47d0      	blx	sl
 8000ecc:	3001      	adds	r0, #1
 8000ece:	d09b      	beq.n	8000e08 <_printf_i+0x164>
 8000ed0:	3501      	adds	r5, #1
 8000ed2:	68e3      	ldr	r3, [r4, #12]
 8000ed4:	9903      	ldr	r1, [sp, #12]
 8000ed6:	1a5b      	subs	r3, r3, r1
 8000ed8:	42ab      	cmp	r3, r5
 8000eda:	dcf2      	bgt.n	8000ec2 <_printf_i+0x21e>
 8000edc:	e7eb      	b.n	8000eb6 <_printf_i+0x212>
 8000ede:	2500      	movs	r5, #0
 8000ee0:	f104 0619 	add.w	r6, r4, #25
 8000ee4:	e7f5      	b.n	8000ed2 <_printf_i+0x22e>
 8000ee6:	bf00      	nop
 8000ee8:	08001591 	.word	0x08001591
 8000eec:	080015a2 	.word	0x080015a2

08000ef0 <_sbrk_r>:
 8000ef0:	b538      	push	{r3, r4, r5, lr}
 8000ef2:	4d06      	ldr	r5, [pc, #24]	; (8000f0c <_sbrk_r+0x1c>)
 8000ef4:	2300      	movs	r3, #0
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	4608      	mov	r0, r1
 8000efa:	602b      	str	r3, [r5, #0]
 8000efc:	f7ff fad4 	bl	80004a8 <_sbrk>
 8000f00:	1c43      	adds	r3, r0, #1
 8000f02:	d102      	bne.n	8000f0a <_sbrk_r+0x1a>
 8000f04:	682b      	ldr	r3, [r5, #0]
 8000f06:	b103      	cbz	r3, 8000f0a <_sbrk_r+0x1a>
 8000f08:	6023      	str	r3, [r4, #0]
 8000f0a:	bd38      	pop	{r3, r4, r5, pc}
 8000f0c:	20000090 	.word	0x20000090

08000f10 <__sread>:
 8000f10:	b510      	push	{r4, lr}
 8000f12:	460c      	mov	r4, r1
 8000f14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f18:	f000 fab2 	bl	8001480 <_read_r>
 8000f1c:	2800      	cmp	r0, #0
 8000f1e:	bfab      	itete	ge
 8000f20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f22:	89a3      	ldrhlt	r3, [r4, #12]
 8000f24:	181b      	addge	r3, r3, r0
 8000f26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f2a:	bfac      	ite	ge
 8000f2c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f2e:	81a3      	strhlt	r3, [r4, #12]
 8000f30:	bd10      	pop	{r4, pc}

08000f32 <__swrite>:
 8000f32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f36:	461f      	mov	r7, r3
 8000f38:	898b      	ldrh	r3, [r1, #12]
 8000f3a:	05db      	lsls	r3, r3, #23
 8000f3c:	4605      	mov	r5, r0
 8000f3e:	460c      	mov	r4, r1
 8000f40:	4616      	mov	r6, r2
 8000f42:	d505      	bpl.n	8000f50 <__swrite+0x1e>
 8000f44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f48:	2302      	movs	r3, #2
 8000f4a:	2200      	movs	r2, #0
 8000f4c:	f000 f9c8 	bl	80012e0 <_lseek_r>
 8000f50:	89a3      	ldrh	r3, [r4, #12]
 8000f52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f5a:	81a3      	strh	r3, [r4, #12]
 8000f5c:	4632      	mov	r2, r6
 8000f5e:	463b      	mov	r3, r7
 8000f60:	4628      	mov	r0, r5
 8000f62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f66:	f000 b869 	b.w	800103c <_write_r>

08000f6a <__sseek>:
 8000f6a:	b510      	push	{r4, lr}
 8000f6c:	460c      	mov	r4, r1
 8000f6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f72:	f000 f9b5 	bl	80012e0 <_lseek_r>
 8000f76:	1c43      	adds	r3, r0, #1
 8000f78:	89a3      	ldrh	r3, [r4, #12]
 8000f7a:	bf15      	itete	ne
 8000f7c:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f7e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f82:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f86:	81a3      	strheq	r3, [r4, #12]
 8000f88:	bf18      	it	ne
 8000f8a:	81a3      	strhne	r3, [r4, #12]
 8000f8c:	bd10      	pop	{r4, pc}

08000f8e <__sclose>:
 8000f8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f92:	f000 b8d3 	b.w	800113c <_close_r>
	...

08000f98 <__swbuf_r>:
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f9a:	460e      	mov	r6, r1
 8000f9c:	4614      	mov	r4, r2
 8000f9e:	4605      	mov	r5, r0
 8000fa0:	b118      	cbz	r0, 8000faa <__swbuf_r+0x12>
 8000fa2:	6983      	ldr	r3, [r0, #24]
 8000fa4:	b90b      	cbnz	r3, 8000faa <__swbuf_r+0x12>
 8000fa6:	f7ff fb81 	bl	80006ac <__sinit>
 8000faa:	4b21      	ldr	r3, [pc, #132]	; (8001030 <__swbuf_r+0x98>)
 8000fac:	429c      	cmp	r4, r3
 8000fae:	d12b      	bne.n	8001008 <__swbuf_r+0x70>
 8000fb0:	686c      	ldr	r4, [r5, #4]
 8000fb2:	69a3      	ldr	r3, [r4, #24]
 8000fb4:	60a3      	str	r3, [r4, #8]
 8000fb6:	89a3      	ldrh	r3, [r4, #12]
 8000fb8:	071a      	lsls	r2, r3, #28
 8000fba:	d52f      	bpl.n	800101c <__swbuf_r+0x84>
 8000fbc:	6923      	ldr	r3, [r4, #16]
 8000fbe:	b36b      	cbz	r3, 800101c <__swbuf_r+0x84>
 8000fc0:	6923      	ldr	r3, [r4, #16]
 8000fc2:	6820      	ldr	r0, [r4, #0]
 8000fc4:	1ac0      	subs	r0, r0, r3
 8000fc6:	6963      	ldr	r3, [r4, #20]
 8000fc8:	b2f6      	uxtb	r6, r6
 8000fca:	4283      	cmp	r3, r0
 8000fcc:	4637      	mov	r7, r6
 8000fce:	dc04      	bgt.n	8000fda <__swbuf_r+0x42>
 8000fd0:	4621      	mov	r1, r4
 8000fd2:	4628      	mov	r0, r5
 8000fd4:	f000 f948 	bl	8001268 <_fflush_r>
 8000fd8:	bb30      	cbnz	r0, 8001028 <__swbuf_r+0x90>
 8000fda:	68a3      	ldr	r3, [r4, #8]
 8000fdc:	3b01      	subs	r3, #1
 8000fde:	60a3      	str	r3, [r4, #8]
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	1c5a      	adds	r2, r3, #1
 8000fe4:	6022      	str	r2, [r4, #0]
 8000fe6:	701e      	strb	r6, [r3, #0]
 8000fe8:	6963      	ldr	r3, [r4, #20]
 8000fea:	3001      	adds	r0, #1
 8000fec:	4283      	cmp	r3, r0
 8000fee:	d004      	beq.n	8000ffa <__swbuf_r+0x62>
 8000ff0:	89a3      	ldrh	r3, [r4, #12]
 8000ff2:	07db      	lsls	r3, r3, #31
 8000ff4:	d506      	bpl.n	8001004 <__swbuf_r+0x6c>
 8000ff6:	2e0a      	cmp	r6, #10
 8000ff8:	d104      	bne.n	8001004 <__swbuf_r+0x6c>
 8000ffa:	4621      	mov	r1, r4
 8000ffc:	4628      	mov	r0, r5
 8000ffe:	f000 f933 	bl	8001268 <_fflush_r>
 8001002:	b988      	cbnz	r0, 8001028 <__swbuf_r+0x90>
 8001004:	4638      	mov	r0, r7
 8001006:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001008:	4b0a      	ldr	r3, [pc, #40]	; (8001034 <__swbuf_r+0x9c>)
 800100a:	429c      	cmp	r4, r3
 800100c:	d101      	bne.n	8001012 <__swbuf_r+0x7a>
 800100e:	68ac      	ldr	r4, [r5, #8]
 8001010:	e7cf      	b.n	8000fb2 <__swbuf_r+0x1a>
 8001012:	4b09      	ldr	r3, [pc, #36]	; (8001038 <__swbuf_r+0xa0>)
 8001014:	429c      	cmp	r4, r3
 8001016:	bf08      	it	eq
 8001018:	68ec      	ldreq	r4, [r5, #12]
 800101a:	e7ca      	b.n	8000fb2 <__swbuf_r+0x1a>
 800101c:	4621      	mov	r1, r4
 800101e:	4628      	mov	r0, r5
 8001020:	f000 f81e 	bl	8001060 <__swsetup_r>
 8001024:	2800      	cmp	r0, #0
 8001026:	d0cb      	beq.n	8000fc0 <__swbuf_r+0x28>
 8001028:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800102c:	e7ea      	b.n	8001004 <__swbuf_r+0x6c>
 800102e:	bf00      	nop
 8001030:	08001540 	.word	0x08001540
 8001034:	08001560 	.word	0x08001560
 8001038:	08001520 	.word	0x08001520

0800103c <_write_r>:
 800103c:	b538      	push	{r3, r4, r5, lr}
 800103e:	4d07      	ldr	r5, [pc, #28]	; (800105c <_write_r+0x20>)
 8001040:	4604      	mov	r4, r0
 8001042:	4608      	mov	r0, r1
 8001044:	4611      	mov	r1, r2
 8001046:	2200      	movs	r2, #0
 8001048:	602a      	str	r2, [r5, #0]
 800104a:	461a      	mov	r2, r3
 800104c:	f7ff f9dc 	bl	8000408 <_write>
 8001050:	1c43      	adds	r3, r0, #1
 8001052:	d102      	bne.n	800105a <_write_r+0x1e>
 8001054:	682b      	ldr	r3, [r5, #0]
 8001056:	b103      	cbz	r3, 800105a <_write_r+0x1e>
 8001058:	6023      	str	r3, [r4, #0]
 800105a:	bd38      	pop	{r3, r4, r5, pc}
 800105c:	20000090 	.word	0x20000090

08001060 <__swsetup_r>:
 8001060:	4b32      	ldr	r3, [pc, #200]	; (800112c <__swsetup_r+0xcc>)
 8001062:	b570      	push	{r4, r5, r6, lr}
 8001064:	681d      	ldr	r5, [r3, #0]
 8001066:	4606      	mov	r6, r0
 8001068:	460c      	mov	r4, r1
 800106a:	b125      	cbz	r5, 8001076 <__swsetup_r+0x16>
 800106c:	69ab      	ldr	r3, [r5, #24]
 800106e:	b913      	cbnz	r3, 8001076 <__swsetup_r+0x16>
 8001070:	4628      	mov	r0, r5
 8001072:	f7ff fb1b 	bl	80006ac <__sinit>
 8001076:	4b2e      	ldr	r3, [pc, #184]	; (8001130 <__swsetup_r+0xd0>)
 8001078:	429c      	cmp	r4, r3
 800107a:	d10f      	bne.n	800109c <__swsetup_r+0x3c>
 800107c:	686c      	ldr	r4, [r5, #4]
 800107e:	89a3      	ldrh	r3, [r4, #12]
 8001080:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001084:	0719      	lsls	r1, r3, #28
 8001086:	d42c      	bmi.n	80010e2 <__swsetup_r+0x82>
 8001088:	06dd      	lsls	r5, r3, #27
 800108a:	d411      	bmi.n	80010b0 <__swsetup_r+0x50>
 800108c:	2309      	movs	r3, #9
 800108e:	6033      	str	r3, [r6, #0]
 8001090:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001094:	81a3      	strh	r3, [r4, #12]
 8001096:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800109a:	e03e      	b.n	800111a <__swsetup_r+0xba>
 800109c:	4b25      	ldr	r3, [pc, #148]	; (8001134 <__swsetup_r+0xd4>)
 800109e:	429c      	cmp	r4, r3
 80010a0:	d101      	bne.n	80010a6 <__swsetup_r+0x46>
 80010a2:	68ac      	ldr	r4, [r5, #8]
 80010a4:	e7eb      	b.n	800107e <__swsetup_r+0x1e>
 80010a6:	4b24      	ldr	r3, [pc, #144]	; (8001138 <__swsetup_r+0xd8>)
 80010a8:	429c      	cmp	r4, r3
 80010aa:	bf08      	it	eq
 80010ac:	68ec      	ldreq	r4, [r5, #12]
 80010ae:	e7e6      	b.n	800107e <__swsetup_r+0x1e>
 80010b0:	0758      	lsls	r0, r3, #29
 80010b2:	d512      	bpl.n	80010da <__swsetup_r+0x7a>
 80010b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010b6:	b141      	cbz	r1, 80010ca <__swsetup_r+0x6a>
 80010b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010bc:	4299      	cmp	r1, r3
 80010be:	d002      	beq.n	80010c6 <__swsetup_r+0x66>
 80010c0:	4630      	mov	r0, r6
 80010c2:	f000 f991 	bl	80013e8 <_free_r>
 80010c6:	2300      	movs	r3, #0
 80010c8:	6363      	str	r3, [r4, #52]	; 0x34
 80010ca:	89a3      	ldrh	r3, [r4, #12]
 80010cc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80010d0:	81a3      	strh	r3, [r4, #12]
 80010d2:	2300      	movs	r3, #0
 80010d4:	6063      	str	r3, [r4, #4]
 80010d6:	6923      	ldr	r3, [r4, #16]
 80010d8:	6023      	str	r3, [r4, #0]
 80010da:	89a3      	ldrh	r3, [r4, #12]
 80010dc:	f043 0308 	orr.w	r3, r3, #8
 80010e0:	81a3      	strh	r3, [r4, #12]
 80010e2:	6923      	ldr	r3, [r4, #16]
 80010e4:	b94b      	cbnz	r3, 80010fa <__swsetup_r+0x9a>
 80010e6:	89a3      	ldrh	r3, [r4, #12]
 80010e8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010f0:	d003      	beq.n	80010fa <__swsetup_r+0x9a>
 80010f2:	4621      	mov	r1, r4
 80010f4:	4630      	mov	r0, r6
 80010f6:	f000 f92b 	bl	8001350 <__smakebuf_r>
 80010fa:	89a0      	ldrh	r0, [r4, #12]
 80010fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001100:	f010 0301 	ands.w	r3, r0, #1
 8001104:	d00a      	beq.n	800111c <__swsetup_r+0xbc>
 8001106:	2300      	movs	r3, #0
 8001108:	60a3      	str	r3, [r4, #8]
 800110a:	6963      	ldr	r3, [r4, #20]
 800110c:	425b      	negs	r3, r3
 800110e:	61a3      	str	r3, [r4, #24]
 8001110:	6923      	ldr	r3, [r4, #16]
 8001112:	b943      	cbnz	r3, 8001126 <__swsetup_r+0xc6>
 8001114:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001118:	d1ba      	bne.n	8001090 <__swsetup_r+0x30>
 800111a:	bd70      	pop	{r4, r5, r6, pc}
 800111c:	0781      	lsls	r1, r0, #30
 800111e:	bf58      	it	pl
 8001120:	6963      	ldrpl	r3, [r4, #20]
 8001122:	60a3      	str	r3, [r4, #8]
 8001124:	e7f4      	b.n	8001110 <__swsetup_r+0xb0>
 8001126:	2000      	movs	r0, #0
 8001128:	e7f7      	b.n	800111a <__swsetup_r+0xba>
 800112a:	bf00      	nop
 800112c:	20000000 	.word	0x20000000
 8001130:	08001540 	.word	0x08001540
 8001134:	08001560 	.word	0x08001560
 8001138:	08001520 	.word	0x08001520

0800113c <_close_r>:
 800113c:	b538      	push	{r3, r4, r5, lr}
 800113e:	4d06      	ldr	r5, [pc, #24]	; (8001158 <_close_r+0x1c>)
 8001140:	2300      	movs	r3, #0
 8001142:	4604      	mov	r4, r0
 8001144:	4608      	mov	r0, r1
 8001146:	602b      	str	r3, [r5, #0]
 8001148:	f7ff f97a 	bl	8000440 <_close>
 800114c:	1c43      	adds	r3, r0, #1
 800114e:	d102      	bne.n	8001156 <_close_r+0x1a>
 8001150:	682b      	ldr	r3, [r5, #0]
 8001152:	b103      	cbz	r3, 8001156 <_close_r+0x1a>
 8001154:	6023      	str	r3, [r4, #0]
 8001156:	bd38      	pop	{r3, r4, r5, pc}
 8001158:	20000090 	.word	0x20000090

0800115c <__sflush_r>:
 800115c:	898a      	ldrh	r2, [r1, #12]
 800115e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001162:	4605      	mov	r5, r0
 8001164:	0710      	lsls	r0, r2, #28
 8001166:	460c      	mov	r4, r1
 8001168:	d458      	bmi.n	800121c <__sflush_r+0xc0>
 800116a:	684b      	ldr	r3, [r1, #4]
 800116c:	2b00      	cmp	r3, #0
 800116e:	dc05      	bgt.n	800117c <__sflush_r+0x20>
 8001170:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001172:	2b00      	cmp	r3, #0
 8001174:	dc02      	bgt.n	800117c <__sflush_r+0x20>
 8001176:	2000      	movs	r0, #0
 8001178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800117c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800117e:	2e00      	cmp	r6, #0
 8001180:	d0f9      	beq.n	8001176 <__sflush_r+0x1a>
 8001182:	2300      	movs	r3, #0
 8001184:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001188:	682f      	ldr	r7, [r5, #0]
 800118a:	602b      	str	r3, [r5, #0]
 800118c:	d032      	beq.n	80011f4 <__sflush_r+0x98>
 800118e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001190:	89a3      	ldrh	r3, [r4, #12]
 8001192:	075a      	lsls	r2, r3, #29
 8001194:	d505      	bpl.n	80011a2 <__sflush_r+0x46>
 8001196:	6863      	ldr	r3, [r4, #4]
 8001198:	1ac0      	subs	r0, r0, r3
 800119a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800119c:	b10b      	cbz	r3, 80011a2 <__sflush_r+0x46>
 800119e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011a0:	1ac0      	subs	r0, r0, r3
 80011a2:	2300      	movs	r3, #0
 80011a4:	4602      	mov	r2, r0
 80011a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011a8:	6a21      	ldr	r1, [r4, #32]
 80011aa:	4628      	mov	r0, r5
 80011ac:	47b0      	blx	r6
 80011ae:	1c43      	adds	r3, r0, #1
 80011b0:	89a3      	ldrh	r3, [r4, #12]
 80011b2:	d106      	bne.n	80011c2 <__sflush_r+0x66>
 80011b4:	6829      	ldr	r1, [r5, #0]
 80011b6:	291d      	cmp	r1, #29
 80011b8:	d82c      	bhi.n	8001214 <__sflush_r+0xb8>
 80011ba:	4a2a      	ldr	r2, [pc, #168]	; (8001264 <__sflush_r+0x108>)
 80011bc:	40ca      	lsrs	r2, r1
 80011be:	07d6      	lsls	r6, r2, #31
 80011c0:	d528      	bpl.n	8001214 <__sflush_r+0xb8>
 80011c2:	2200      	movs	r2, #0
 80011c4:	6062      	str	r2, [r4, #4]
 80011c6:	04d9      	lsls	r1, r3, #19
 80011c8:	6922      	ldr	r2, [r4, #16]
 80011ca:	6022      	str	r2, [r4, #0]
 80011cc:	d504      	bpl.n	80011d8 <__sflush_r+0x7c>
 80011ce:	1c42      	adds	r2, r0, #1
 80011d0:	d101      	bne.n	80011d6 <__sflush_r+0x7a>
 80011d2:	682b      	ldr	r3, [r5, #0]
 80011d4:	b903      	cbnz	r3, 80011d8 <__sflush_r+0x7c>
 80011d6:	6560      	str	r0, [r4, #84]	; 0x54
 80011d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011da:	602f      	str	r7, [r5, #0]
 80011dc:	2900      	cmp	r1, #0
 80011de:	d0ca      	beq.n	8001176 <__sflush_r+0x1a>
 80011e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011e4:	4299      	cmp	r1, r3
 80011e6:	d002      	beq.n	80011ee <__sflush_r+0x92>
 80011e8:	4628      	mov	r0, r5
 80011ea:	f000 f8fd 	bl	80013e8 <_free_r>
 80011ee:	2000      	movs	r0, #0
 80011f0:	6360      	str	r0, [r4, #52]	; 0x34
 80011f2:	e7c1      	b.n	8001178 <__sflush_r+0x1c>
 80011f4:	6a21      	ldr	r1, [r4, #32]
 80011f6:	2301      	movs	r3, #1
 80011f8:	4628      	mov	r0, r5
 80011fa:	47b0      	blx	r6
 80011fc:	1c41      	adds	r1, r0, #1
 80011fe:	d1c7      	bne.n	8001190 <__sflush_r+0x34>
 8001200:	682b      	ldr	r3, [r5, #0]
 8001202:	2b00      	cmp	r3, #0
 8001204:	d0c4      	beq.n	8001190 <__sflush_r+0x34>
 8001206:	2b1d      	cmp	r3, #29
 8001208:	d001      	beq.n	800120e <__sflush_r+0xb2>
 800120a:	2b16      	cmp	r3, #22
 800120c:	d101      	bne.n	8001212 <__sflush_r+0xb6>
 800120e:	602f      	str	r7, [r5, #0]
 8001210:	e7b1      	b.n	8001176 <__sflush_r+0x1a>
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001218:	81a3      	strh	r3, [r4, #12]
 800121a:	e7ad      	b.n	8001178 <__sflush_r+0x1c>
 800121c:	690f      	ldr	r7, [r1, #16]
 800121e:	2f00      	cmp	r7, #0
 8001220:	d0a9      	beq.n	8001176 <__sflush_r+0x1a>
 8001222:	0793      	lsls	r3, r2, #30
 8001224:	680e      	ldr	r6, [r1, #0]
 8001226:	bf08      	it	eq
 8001228:	694b      	ldreq	r3, [r1, #20]
 800122a:	600f      	str	r7, [r1, #0]
 800122c:	bf18      	it	ne
 800122e:	2300      	movne	r3, #0
 8001230:	eba6 0807 	sub.w	r8, r6, r7
 8001234:	608b      	str	r3, [r1, #8]
 8001236:	f1b8 0f00 	cmp.w	r8, #0
 800123a:	dd9c      	ble.n	8001176 <__sflush_r+0x1a>
 800123c:	6a21      	ldr	r1, [r4, #32]
 800123e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001240:	4643      	mov	r3, r8
 8001242:	463a      	mov	r2, r7
 8001244:	4628      	mov	r0, r5
 8001246:	47b0      	blx	r6
 8001248:	2800      	cmp	r0, #0
 800124a:	dc06      	bgt.n	800125a <__sflush_r+0xfe>
 800124c:	89a3      	ldrh	r3, [r4, #12]
 800124e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001252:	81a3      	strh	r3, [r4, #12]
 8001254:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001258:	e78e      	b.n	8001178 <__sflush_r+0x1c>
 800125a:	4407      	add	r7, r0
 800125c:	eba8 0800 	sub.w	r8, r8, r0
 8001260:	e7e9      	b.n	8001236 <__sflush_r+0xda>
 8001262:	bf00      	nop
 8001264:	20400001 	.word	0x20400001

08001268 <_fflush_r>:
 8001268:	b538      	push	{r3, r4, r5, lr}
 800126a:	690b      	ldr	r3, [r1, #16]
 800126c:	4605      	mov	r5, r0
 800126e:	460c      	mov	r4, r1
 8001270:	b913      	cbnz	r3, 8001278 <_fflush_r+0x10>
 8001272:	2500      	movs	r5, #0
 8001274:	4628      	mov	r0, r5
 8001276:	bd38      	pop	{r3, r4, r5, pc}
 8001278:	b118      	cbz	r0, 8001282 <_fflush_r+0x1a>
 800127a:	6983      	ldr	r3, [r0, #24]
 800127c:	b90b      	cbnz	r3, 8001282 <_fflush_r+0x1a>
 800127e:	f7ff fa15 	bl	80006ac <__sinit>
 8001282:	4b14      	ldr	r3, [pc, #80]	; (80012d4 <_fflush_r+0x6c>)
 8001284:	429c      	cmp	r4, r3
 8001286:	d11b      	bne.n	80012c0 <_fflush_r+0x58>
 8001288:	686c      	ldr	r4, [r5, #4]
 800128a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800128e:	2b00      	cmp	r3, #0
 8001290:	d0ef      	beq.n	8001272 <_fflush_r+0xa>
 8001292:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001294:	07d0      	lsls	r0, r2, #31
 8001296:	d404      	bmi.n	80012a2 <_fflush_r+0x3a>
 8001298:	0599      	lsls	r1, r3, #22
 800129a:	d402      	bmi.n	80012a2 <_fflush_r+0x3a>
 800129c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800129e:	f7ff faa3 	bl	80007e8 <__retarget_lock_acquire_recursive>
 80012a2:	4628      	mov	r0, r5
 80012a4:	4621      	mov	r1, r4
 80012a6:	f7ff ff59 	bl	800115c <__sflush_r>
 80012aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012ac:	07da      	lsls	r2, r3, #31
 80012ae:	4605      	mov	r5, r0
 80012b0:	d4e0      	bmi.n	8001274 <_fflush_r+0xc>
 80012b2:	89a3      	ldrh	r3, [r4, #12]
 80012b4:	059b      	lsls	r3, r3, #22
 80012b6:	d4dd      	bmi.n	8001274 <_fflush_r+0xc>
 80012b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012ba:	f7ff fa96 	bl	80007ea <__retarget_lock_release_recursive>
 80012be:	e7d9      	b.n	8001274 <_fflush_r+0xc>
 80012c0:	4b05      	ldr	r3, [pc, #20]	; (80012d8 <_fflush_r+0x70>)
 80012c2:	429c      	cmp	r4, r3
 80012c4:	d101      	bne.n	80012ca <_fflush_r+0x62>
 80012c6:	68ac      	ldr	r4, [r5, #8]
 80012c8:	e7df      	b.n	800128a <_fflush_r+0x22>
 80012ca:	4b04      	ldr	r3, [pc, #16]	; (80012dc <_fflush_r+0x74>)
 80012cc:	429c      	cmp	r4, r3
 80012ce:	bf08      	it	eq
 80012d0:	68ec      	ldreq	r4, [r5, #12]
 80012d2:	e7da      	b.n	800128a <_fflush_r+0x22>
 80012d4:	08001540 	.word	0x08001540
 80012d8:	08001560 	.word	0x08001560
 80012dc:	08001520 	.word	0x08001520

080012e0 <_lseek_r>:
 80012e0:	b538      	push	{r3, r4, r5, lr}
 80012e2:	4d07      	ldr	r5, [pc, #28]	; (8001300 <_lseek_r+0x20>)
 80012e4:	4604      	mov	r4, r0
 80012e6:	4608      	mov	r0, r1
 80012e8:	4611      	mov	r1, r2
 80012ea:	2200      	movs	r2, #0
 80012ec:	602a      	str	r2, [r5, #0]
 80012ee:	461a      	mov	r2, r3
 80012f0:	f7ff f8cd 	bl	800048e <_lseek>
 80012f4:	1c43      	adds	r3, r0, #1
 80012f6:	d102      	bne.n	80012fe <_lseek_r+0x1e>
 80012f8:	682b      	ldr	r3, [r5, #0]
 80012fa:	b103      	cbz	r3, 80012fe <_lseek_r+0x1e>
 80012fc:	6023      	str	r3, [r4, #0]
 80012fe:	bd38      	pop	{r3, r4, r5, pc}
 8001300:	20000090 	.word	0x20000090

08001304 <__swhatbuf_r>:
 8001304:	b570      	push	{r4, r5, r6, lr}
 8001306:	460e      	mov	r6, r1
 8001308:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800130c:	2900      	cmp	r1, #0
 800130e:	b096      	sub	sp, #88	; 0x58
 8001310:	4614      	mov	r4, r2
 8001312:	461d      	mov	r5, r3
 8001314:	da08      	bge.n	8001328 <__swhatbuf_r+0x24>
 8001316:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800131a:	2200      	movs	r2, #0
 800131c:	602a      	str	r2, [r5, #0]
 800131e:	061a      	lsls	r2, r3, #24
 8001320:	d410      	bmi.n	8001344 <__swhatbuf_r+0x40>
 8001322:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001326:	e00e      	b.n	8001346 <__swhatbuf_r+0x42>
 8001328:	466a      	mov	r2, sp
 800132a:	f000 f8bb 	bl	80014a4 <_fstat_r>
 800132e:	2800      	cmp	r0, #0
 8001330:	dbf1      	blt.n	8001316 <__swhatbuf_r+0x12>
 8001332:	9a01      	ldr	r2, [sp, #4]
 8001334:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001338:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800133c:	425a      	negs	r2, r3
 800133e:	415a      	adcs	r2, r3
 8001340:	602a      	str	r2, [r5, #0]
 8001342:	e7ee      	b.n	8001322 <__swhatbuf_r+0x1e>
 8001344:	2340      	movs	r3, #64	; 0x40
 8001346:	2000      	movs	r0, #0
 8001348:	6023      	str	r3, [r4, #0]
 800134a:	b016      	add	sp, #88	; 0x58
 800134c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001350 <__smakebuf_r>:
 8001350:	898b      	ldrh	r3, [r1, #12]
 8001352:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001354:	079d      	lsls	r5, r3, #30
 8001356:	4606      	mov	r6, r0
 8001358:	460c      	mov	r4, r1
 800135a:	d507      	bpl.n	800136c <__smakebuf_r+0x1c>
 800135c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001360:	6023      	str	r3, [r4, #0]
 8001362:	6123      	str	r3, [r4, #16]
 8001364:	2301      	movs	r3, #1
 8001366:	6163      	str	r3, [r4, #20]
 8001368:	b002      	add	sp, #8
 800136a:	bd70      	pop	{r4, r5, r6, pc}
 800136c:	ab01      	add	r3, sp, #4
 800136e:	466a      	mov	r2, sp
 8001370:	f7ff ffc8 	bl	8001304 <__swhatbuf_r>
 8001374:	9900      	ldr	r1, [sp, #0]
 8001376:	4605      	mov	r5, r0
 8001378:	4630      	mov	r0, r6
 800137a:	f7ff fa57 	bl	800082c <_malloc_r>
 800137e:	b948      	cbnz	r0, 8001394 <__smakebuf_r+0x44>
 8001380:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001384:	059a      	lsls	r2, r3, #22
 8001386:	d4ef      	bmi.n	8001368 <__smakebuf_r+0x18>
 8001388:	f023 0303 	bic.w	r3, r3, #3
 800138c:	f043 0302 	orr.w	r3, r3, #2
 8001390:	81a3      	strh	r3, [r4, #12]
 8001392:	e7e3      	b.n	800135c <__smakebuf_r+0xc>
 8001394:	4b0d      	ldr	r3, [pc, #52]	; (80013cc <__smakebuf_r+0x7c>)
 8001396:	62b3      	str	r3, [r6, #40]	; 0x28
 8001398:	89a3      	ldrh	r3, [r4, #12]
 800139a:	6020      	str	r0, [r4, #0]
 800139c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013a0:	81a3      	strh	r3, [r4, #12]
 80013a2:	9b00      	ldr	r3, [sp, #0]
 80013a4:	6163      	str	r3, [r4, #20]
 80013a6:	9b01      	ldr	r3, [sp, #4]
 80013a8:	6120      	str	r0, [r4, #16]
 80013aa:	b15b      	cbz	r3, 80013c4 <__smakebuf_r+0x74>
 80013ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013b0:	4630      	mov	r0, r6
 80013b2:	f000 f889 	bl	80014c8 <_isatty_r>
 80013b6:	b128      	cbz	r0, 80013c4 <__smakebuf_r+0x74>
 80013b8:	89a3      	ldrh	r3, [r4, #12]
 80013ba:	f023 0303 	bic.w	r3, r3, #3
 80013be:	f043 0301 	orr.w	r3, r3, #1
 80013c2:	81a3      	strh	r3, [r4, #12]
 80013c4:	89a0      	ldrh	r0, [r4, #12]
 80013c6:	4305      	orrs	r5, r0
 80013c8:	81a5      	strh	r5, [r4, #12]
 80013ca:	e7cd      	b.n	8001368 <__smakebuf_r+0x18>
 80013cc:	08000645 	.word	0x08000645

080013d0 <__malloc_lock>:
 80013d0:	4801      	ldr	r0, [pc, #4]	; (80013d8 <__malloc_lock+0x8>)
 80013d2:	f7ff ba09 	b.w	80007e8 <__retarget_lock_acquire_recursive>
 80013d6:	bf00      	nop
 80013d8:	20000084 	.word	0x20000084

080013dc <__malloc_unlock>:
 80013dc:	4801      	ldr	r0, [pc, #4]	; (80013e4 <__malloc_unlock+0x8>)
 80013de:	f7ff ba04 	b.w	80007ea <__retarget_lock_release_recursive>
 80013e2:	bf00      	nop
 80013e4:	20000084 	.word	0x20000084

080013e8 <_free_r>:
 80013e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013ea:	2900      	cmp	r1, #0
 80013ec:	d044      	beq.n	8001478 <_free_r+0x90>
 80013ee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80013f2:	9001      	str	r0, [sp, #4]
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	f1a1 0404 	sub.w	r4, r1, #4
 80013fa:	bfb8      	it	lt
 80013fc:	18e4      	addlt	r4, r4, r3
 80013fe:	f7ff ffe7 	bl	80013d0 <__malloc_lock>
 8001402:	4a1e      	ldr	r2, [pc, #120]	; (800147c <_free_r+0x94>)
 8001404:	9801      	ldr	r0, [sp, #4]
 8001406:	6813      	ldr	r3, [r2, #0]
 8001408:	b933      	cbnz	r3, 8001418 <_free_r+0x30>
 800140a:	6063      	str	r3, [r4, #4]
 800140c:	6014      	str	r4, [r2, #0]
 800140e:	b003      	add	sp, #12
 8001410:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001414:	f7ff bfe2 	b.w	80013dc <__malloc_unlock>
 8001418:	42a3      	cmp	r3, r4
 800141a:	d908      	bls.n	800142e <_free_r+0x46>
 800141c:	6825      	ldr	r5, [r4, #0]
 800141e:	1961      	adds	r1, r4, r5
 8001420:	428b      	cmp	r3, r1
 8001422:	bf01      	itttt	eq
 8001424:	6819      	ldreq	r1, [r3, #0]
 8001426:	685b      	ldreq	r3, [r3, #4]
 8001428:	1949      	addeq	r1, r1, r5
 800142a:	6021      	streq	r1, [r4, #0]
 800142c:	e7ed      	b.n	800140a <_free_r+0x22>
 800142e:	461a      	mov	r2, r3
 8001430:	685b      	ldr	r3, [r3, #4]
 8001432:	b10b      	cbz	r3, 8001438 <_free_r+0x50>
 8001434:	42a3      	cmp	r3, r4
 8001436:	d9fa      	bls.n	800142e <_free_r+0x46>
 8001438:	6811      	ldr	r1, [r2, #0]
 800143a:	1855      	adds	r5, r2, r1
 800143c:	42a5      	cmp	r5, r4
 800143e:	d10b      	bne.n	8001458 <_free_r+0x70>
 8001440:	6824      	ldr	r4, [r4, #0]
 8001442:	4421      	add	r1, r4
 8001444:	1854      	adds	r4, r2, r1
 8001446:	42a3      	cmp	r3, r4
 8001448:	6011      	str	r1, [r2, #0]
 800144a:	d1e0      	bne.n	800140e <_free_r+0x26>
 800144c:	681c      	ldr	r4, [r3, #0]
 800144e:	685b      	ldr	r3, [r3, #4]
 8001450:	6053      	str	r3, [r2, #4]
 8001452:	4421      	add	r1, r4
 8001454:	6011      	str	r1, [r2, #0]
 8001456:	e7da      	b.n	800140e <_free_r+0x26>
 8001458:	d902      	bls.n	8001460 <_free_r+0x78>
 800145a:	230c      	movs	r3, #12
 800145c:	6003      	str	r3, [r0, #0]
 800145e:	e7d6      	b.n	800140e <_free_r+0x26>
 8001460:	6825      	ldr	r5, [r4, #0]
 8001462:	1961      	adds	r1, r4, r5
 8001464:	428b      	cmp	r3, r1
 8001466:	bf04      	itt	eq
 8001468:	6819      	ldreq	r1, [r3, #0]
 800146a:	685b      	ldreq	r3, [r3, #4]
 800146c:	6063      	str	r3, [r4, #4]
 800146e:	bf04      	itt	eq
 8001470:	1949      	addeq	r1, r1, r5
 8001472:	6021      	streq	r1, [r4, #0]
 8001474:	6054      	str	r4, [r2, #4]
 8001476:	e7ca      	b.n	800140e <_free_r+0x26>
 8001478:	b003      	add	sp, #12
 800147a:	bd30      	pop	{r4, r5, pc}
 800147c:	20000088 	.word	0x20000088

08001480 <_read_r>:
 8001480:	b538      	push	{r3, r4, r5, lr}
 8001482:	4d07      	ldr	r5, [pc, #28]	; (80014a0 <_read_r+0x20>)
 8001484:	4604      	mov	r4, r0
 8001486:	4608      	mov	r0, r1
 8001488:	4611      	mov	r1, r2
 800148a:	2200      	movs	r2, #0
 800148c:	602a      	str	r2, [r5, #0]
 800148e:	461a      	mov	r2, r3
 8001490:	f7fe ff9d 	bl	80003ce <_read>
 8001494:	1c43      	adds	r3, r0, #1
 8001496:	d102      	bne.n	800149e <_read_r+0x1e>
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	b103      	cbz	r3, 800149e <_read_r+0x1e>
 800149c:	6023      	str	r3, [r4, #0]
 800149e:	bd38      	pop	{r3, r4, r5, pc}
 80014a0:	20000090 	.word	0x20000090

080014a4 <_fstat_r>:
 80014a4:	b538      	push	{r3, r4, r5, lr}
 80014a6:	4d07      	ldr	r5, [pc, #28]	; (80014c4 <_fstat_r+0x20>)
 80014a8:	2300      	movs	r3, #0
 80014aa:	4604      	mov	r4, r0
 80014ac:	4608      	mov	r0, r1
 80014ae:	4611      	mov	r1, r2
 80014b0:	602b      	str	r3, [r5, #0]
 80014b2:	f7fe ffd1 	bl	8000458 <_fstat>
 80014b6:	1c43      	adds	r3, r0, #1
 80014b8:	d102      	bne.n	80014c0 <_fstat_r+0x1c>
 80014ba:	682b      	ldr	r3, [r5, #0]
 80014bc:	b103      	cbz	r3, 80014c0 <_fstat_r+0x1c>
 80014be:	6023      	str	r3, [r4, #0]
 80014c0:	bd38      	pop	{r3, r4, r5, pc}
 80014c2:	bf00      	nop
 80014c4:	20000090 	.word	0x20000090

080014c8 <_isatty_r>:
 80014c8:	b538      	push	{r3, r4, r5, lr}
 80014ca:	4d06      	ldr	r5, [pc, #24]	; (80014e4 <_isatty_r+0x1c>)
 80014cc:	2300      	movs	r3, #0
 80014ce:	4604      	mov	r4, r0
 80014d0:	4608      	mov	r0, r1
 80014d2:	602b      	str	r3, [r5, #0]
 80014d4:	f7fe ffd0 	bl	8000478 <_isatty>
 80014d8:	1c43      	adds	r3, r0, #1
 80014da:	d102      	bne.n	80014e2 <_isatty_r+0x1a>
 80014dc:	682b      	ldr	r3, [r5, #0]
 80014de:	b103      	cbz	r3, 80014e2 <_isatty_r+0x1a>
 80014e0:	6023      	str	r3, [r4, #0]
 80014e2:	bd38      	pop	{r3, r4, r5, pc}
 80014e4:	20000090 	.word	0x20000090

080014e8 <_init>:
 80014e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014ea:	bf00      	nop
 80014ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ee:	bc08      	pop	{r3}
 80014f0:	469e      	mov	lr, r3
 80014f2:	4770      	bx	lr

080014f4 <_fini>:
 80014f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014f6:	bf00      	nop
 80014f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014fa:	bc08      	pop	{r3}
 80014fc:	469e      	mov	lr, r3
 80014fe:	4770      	bx	lr
